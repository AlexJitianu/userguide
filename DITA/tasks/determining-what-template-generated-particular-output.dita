<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="determining-what-template-generated-particular-output">
  <title id="determine-template-for-output-title">Determining What XSLT / XQuery Expression
    Generated Particular Output</title>
  <prolog>
    <metadata>
      <keywords><indexterm>XSLT/XQuery Debugger<indexterm>determining what XSLT/XQuery expression generated
            particular output</indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>In order to quickly spot the XSLT templates or XQuery expressions with problems it is
        important to know what XSLT template in the XSLT stylesheet or XQuery expression in the
        XQuery document and what element in the source XML document generated a specified area in
        the output.</p>
      <p>Some of the debugging capabilities, for example <i>Step in</i> can be used for this
        purpose. Using <i>Step in</i> you can see how output is generated and link it with the
        XSLT/XQuery element being executed in the current source context. However, this can become
        difficult on complex XSLT stylesheets or XQuery documents that generate a large output.</p>
      <p>You can click on the text from the <uicontrol>Text</uicontrol> output view or
          <uicontrol>XHTML</uicontrol> output view and the editor will select the XML source context
        and the XSLT template/XQuery element that generated the text. Also inspecting the whole
        stack of XSLT templates/XQuery elements that determined the state of the XSLT/XQuery
        processor at the moment of generating the specified output area speeds up the debugging
        process.</p>
    </context>
    <steps id="procedure-determine-template-for-output">
      <step>
        <cmd>Switch to <ph product="editor developer">the XSLT Debugger perspective or the XQuery
            Debugger perspective</ph>
          <ph product="editorEclipse developerEclipse">the <ph
              keyref="product"/> XSLT
            Debugger perspective or <ph
              keyref="product"/> XQuery
            Debugger perspective</ph> with one of the actions (here explained for XSLT):</cmd>
        <choices>
          <choice>Go to menu <ph product="editor developer"><menucascade>
                <uicontrol>Window</uicontrol>
                <uicontrol>Open perspective</uicontrol>
                <uicontrol>XSLT Debugger</uicontrol>
              </menucascade> or the toolbar button <uicontrol><image href="../img/Debugger16.gif"
                  id="image_k5f_l4s_tr"/>XSLT Debugger </uicontrol>
            </ph>
            <menucascade product="editorEclipse developerEclipse">
              <uicontrol>Window</uicontrol>
              <uicontrol>Open Perspective</uicontrol>
              <uicontrol>Other ...</uicontrol>
              <uicontrol product="editorEclipse developerEclipse">Oxygen XSLT Debugger</uicontrol>
            </menucascade></choice>
          <choice>Go to menu <ph product="editor developer">
              <menucascade>
                <uicontrol>Document</uicontrol>
                <uicontrol>XML Document</uicontrol>
                <uicontrol>Debug scenario</uicontrol>
              </menucascade> or the toolbar button <uicontrol><image
                  href="../img/DebugScenario16.png" id="image_sz5_24s_tr"/>Debug scenario
              </uicontrol>
            </ph>
            <ph product="editorEclipse developerEclipse">. The toolbar button <uicontrol><image
                  href="../img/DebugScenario16.png" id="image_qk3_f4s_tr"/>Debug scenario
              </uicontrol>
            </ph>. This action initializes the Debugger perspective with the parameters of the
            transformation scenario. Any modification applied to the scenario parameters (the
            transformer engine, the XSLT parameters, the transformer extensions, etc) will be saved
            back in the scenario when exiting from the Debugger perspective.</choice>
        </choices>
      </step>
      <step>
        <cmd>Select the source XML document in the XML source selector of <xref
            href="../topics/debug-control-toolbar.dita">the Control toolbar</xref>. In the case of
          XQuery debugging without an implicit source choose the NONE value.</cmd>
      </step>
      <step>
        <cmd>Select the XSLT / XQuery document in the XSLT / XQuery selector of <xref
            href="../topics/debug-control-toolbar.dita">the Control toolbar</xref>.</cmd>
      </step>
      <step>
        <cmd>Select the XSLT / XQuery engine in the XSLT / XQuery engine selector of <xref
            href="../topics/debug-control-toolbar.dita">the Control toolbar</xref>.</cmd>
      </step>
      <step>
        <cmd>Set XSLT / XQuery parameters from the button available on <xref
            href="../topics/debug-control-toolbar.dita">the Control toolbar</xref>.</cmd>
      </step>
      <step>
        <cmd>Apply the XSLT stylesheet or XQuery transformation using the button <uicontrol><image
              href="../img/RunToEnd16.gif" id="image_ljy_qsf_wr"/>Run to end </uicontrol> available
          on <xref href="../topics/debug-control-toolbar.dita">the Control toolbar</xref>. </cmd>
      </step>
      <step>
        <cmd>Inspect the mapping by clicking a section of the output <ph product="editor developer"
            >from the <uicontrol>Text</uicontrol> view tab or from the <uicontrol>XHTML</uicontrol>
            view tab of the <xref
              href="../topics/xslt-debugger-perspective.dita#xslt-debugger-perspective/debug-output-view"
              >Output document view</xref>
          </ph>
          <ph product="editorEclipse developerEclipse">from the <uicontrol>Output</uicontrol> view
            of the <ph keyref="product"/>
            XSLT Debugger or <ph
              keyref="product"/> XQuery
            Debugger perspectives</ph>.</cmd>
        <info>
          <fig id="xhtml-mapping" product="editor developer">
            <title>XHTML Output to Source Mapping</title>
            <image href="../img/sa_debugger_xhtml_mapping.png"/>
          </fig>
          <fig id="text-mapping-oxygen" product="editor developer">
            <title>Text Output to Source Mapping</title>
            <image href="../img/sa_debugger_text_mapping.png"/>
          </fig>
          <fig id="text-mapping-oxygenEclipse" product="editorEclipse developerEclipse">
            <title>Text Output to Source Mapping</title>
            <image href="../img/ec_debugger_text_mapping.png"/>
          </fig>
        </info>
        <stepresult>This action will highlight the XSLT / XQuery element and the XML source context.
          This XSLT template/XQuery element that is highlighted in the XSLT/XQuery editor represents
          only the top of the stack of XSLT templates/XQuery elements that determined the state of
          the XSLT/XQuery processor at the moment of generating the clicked output section. In the
          case of complex transformations inspecting the whole stack of XSLT templates/XQuery
          elements speeds up the debugging process. This stack is available in <xref
            href="../topics/debug-output-mapping-stack-view.dita#debug-output-mapping-stack-view"
            format="dita">the <uicontrol>Output Mapping Stack</uicontrol> view</xref>.</stepresult>
      </step>
    </steps>
  </taskbody>
  <related-links>
    <link href="../topics/debug-output-mapping-stack-view.dita#debug-output-mapping-stack-view"/>
    <link href="../topics/debug-trace-view.dita#debug-trace-view"/>
    <link href="../topics/debug-templates-view.dita#debug-templates-view"/>
  </related-links>
</task>