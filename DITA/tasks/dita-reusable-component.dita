<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="dita-reusable-component">
  <title>How to Work with Reusable Components</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Content Reuse<indexterm>reusable components</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>When you need to reuse a part of a DITA topic in different places (in the same topic or in
      different topics) it is recommended to create a separate component and insert only a reference
      to the new component in all places. Below are the steps for extracting a reusable component,
      inserting a reference to the component and quickly editing the content inside the
      component.</context>
    <steps>
      <step>
        <cmd>Select with the mouse the content that you want to reuse in the DITA file opened in
            <uicontrol>Author</uicontrol> mode.</cmd>
      </step>
      <step>
        <cmd>Start the action <uicontrol>Create Reusable Component</uicontrol> that is available on
          the DITA menu, the Author framework actions toolbar and the contextual menu of the Author
          editor.</cmd>
      </step>
      <step>
        <cmd>In the combo box <uicontrol>Reuse Content</uicontrol> select the DITA element with the
          content that you want to extract in a separate component. The combo box contains the
          current DITA element where the cursor is located (for example a <codeph>p</codeph> element
          - a paragraph - or a <codeph>step</codeph> or a <codeph>taskbody</codeph> or a
            <codeph>conbody</codeph> etc.) and also all the ancestor elements of the current
          element.</cmd>
      </step>
      <step>
        <cmd>In the <uicontrol>Description</uicontrol> area enter a textual description for quick
          identification by other users of the component.</cmd>
      </step>
      <step>
        <cmd>If you want to replace the extracted content with a reference to the new component you
          should leave the checkbox <uicontrol>Replace selection with content reference</uicontrol>
          with the default value (selected).</cmd>
      </step>
      <step>
        <cmd>Press the <uicontrol>Save</uicontrol> button which will open a file system dialog where
          you have to select the folder and enter the name of the file that will store the reusable
          component.</cmd>
      </step>
      <step>
        <cmd>Press the <uicontrol>Save</uicontrol> button in the file system dialog to save the
          reusable component in a file. If the checkbox was selected in the <uicontrol>Create
            Reusable Component</uicontrol> dialog the <codeph>conref</codeph> attribute will be
          added to the element that was extracted as a separate component. In
            <uicontrol>Author</uicontrol> mode the content that is referenced by the
            <codeph>conref</codeph> attribute is displayed with grey background and is read-only
          because it is stored in other file.</cmd>
      </step>
      <step>
        <cmd>Optionally, to insert a reference to the same component in other location just place
          the cursor at the insert location and run the action <uicontrol>Insert Reusable
            Component</uicontrol> that is available on the DITA menu, the Author framework actions
          toolbar and the contextual menu of the Author editor. Just select in the file system
          dialog the file that stores the component and press the <uicontrol>OK</uicontrol> button.
          The action will add a <codeph>conref</codeph> attribute to the DITA element at the insert
          location. The referenced content will be displayed in <uicontrol>Author</uicontrol> mode
          with grey background to indicate that it is not editable.</cmd>
      </step>
      <step>
        <cmd>Optionally, to edit the content inside the component just click on the open icon <image href="../img/bt_editContent.png"/> at the start of the grey background area which will
          open the component in a separate editor.</cmd>
      </step>
    </steps>
  </taskbody>
</task>