<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="merge-trees">
  <title>Merge Two Different Trees</title><prolog>
    <metadata>
      <keywords><indexterm>SVN Branches/Tags<indexterm>merging<indexterm>merge two different
            trees</indexterm></indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>This merge type is useful when you need to duplicate changes from one child branch (for
      example, <codeph>CB1</codeph>) to another child branch (<codeph>CB2</codeph>) from the same
      parent branch. The SVN client will calculate the changes necessary to get from the
        <codeph>HEAD</codeph> revision of the parent branch (or the <term>trunk</term>) to the
        <codeph>HEAD</codeph> revision of one of its child branches (<codeph>CB1</codeph>), and
      apply those changes to your working copy of the other branch (<codeph>CB2</codeph>). The
      result is that the latter child branch (<codeph>CB2</codeph>) will also include the changes
      made on the original child branch (<codeph>CB1</codeph>), although that branch was not
      reintegrated into the parent branch. <p>This merge type could also be used to reintegrate a
        child branch back into its parent when the repository does not support <term>merge
          tracking</term>.</p><note>If the server does not support <term>merge-tracking</term>, then
        this is the only way to merge a branch back to its parent.</note></context>
    <steps>
      <step conref="merge-revisions-range.dita#merge-revisions-range/start-wizard">
        <cmd/>
      </step>
      <step>
        <cmd>Select the option <uicontrol>Merge two different trees</uicontrol>.</cmd>
      </step>
      <step conref="merge-revisions-range.dita#merge-revisions-range/pre-merge-checks-step">
        <cmd/>
      </step>
      <step>
        <cmd>Press the <uicontrol>Next</uicontrol> button.</cmd>
        <stepresult>The <uicontrol>Merge two different trees</uicontrol> wizard page is
          displayed.</stepresult>
      </step>
      <step>
        <cmd>In the <b>From (starting URL and revision)</b> section enter <xref
            href="../topics/entering-local-paths-urls.dita#entering-local-paths-urls/url-section"
            >the URL of the first branch</xref>.</cmd>
        <info><ph
            conref="merge-revisions-range.dita#merge-revisions-range/merge_browse_source_repository"/><p>
            <note type="tip">If you are using this method to merge a feature branch back to its
              parent branch, you need to start the merge wizard from within a working copy of the
              parent. In this field enter the full URL of the parent branch. This may sound wrong,
              but remember that the parent is the starting point to which you want to add the branch
              changes.</note>
            <note
              conref="merge-revisions-range.dita#merge-revisions-range/different-repository-note"/>
            <note type="tip"><ph
                conref="merge-revisions-range.dita#merge-revisions-range/merge-source-peg-revision"
              /> By default, the <codeph>HEAD</codeph> revision is assumed.</note>
          </p></info>
      </step>
      <step>
        <cmd>Enter the last revision number at which the two trees were synchronized by choosing
          between <uicontrol>HEAD revision</uicontrol> and <uicontrol>other
          revision</uicontrol>.</cmd>
        <info>
          <p>
            <ul id="ul_jsx_1dy_4r">
              <li><uicontrol>HEAD revision</uicontrol> - Use this option if you are sure that no one
                else has committed changes since the last synchronization.</li>
              <li><uicontrol>other revision</uicontrol> - Use this option to input a specific
                revision number and avoid losing recent commits. You can use the
                  <uicontrol>History</uicontrol> button to see a list of all revisions.</li>
            </ul>
          </p>
        </info>
      </step>
      <step>
        <cmd>In the <uicontrol>To (ending URL and revision)</uicontrol> section enter <xref
            href="../topics/entering-local-paths-urls.dita#entering-local-paths-urls/url-section"
            >the URL of the second branch</xref>.</cmd>
        <info><ph
            conref="merge-revisions-range.dita#merge-revisions-range/merge_browse_source_repository"
            /><note type="tip">If you are using this method to merge a feature branch back to its
            parent branch, enter the URL of the feature branch. This way, only the changes unique to
            this branch will be merged, since the branch should have been periodically synchronized
            with its parent.</note><note type="attention">The URL must point to the same repository
            as the one in the <uicontrol>From (starting URL and revision)</uicontrol> field.
            Otherwise, the operation will not be allowed, since Subversion cannot compute changes
            between items from different repositories.</note><note type="tip"><ph
              conref="merge-revisions-range.dita#merge-revisions-range/merge-source-peg-revision"/>
            By default, the <codeph>HEAD</codeph> revision is assumed.</note></info>
      </step>
      <step>
        <cmd>Select a revision to compute all changes committed up to that point by choosing between
            <uicontrol>HEAD revision</uicontrol> and <uicontrol>other revision</uicontrol>.</cmd>
        <info>
          <ul id="ul_nn5_4dy_4r">
            <li><uicontrol>HEAD revision</uicontrol> - This is the default selected revision.</li>
            <li><uicontrol>other revision</uicontrol> - Use this option if you want to enter a
              previous revision. You can use the <uicontrol>History</uicontrol> button to see a list
              of all revisions.</li>
          </ul>
        </info>
      </step>
      <step conref="merge-revisions-range.dita#merge-revisions-range/next-button">
        <cmd/>
      </step>
      <step conref="merge-revisions-range.dita#merge-revisions-range/perform-merge">
        <cmd/>
      </step>
    </steps>
    <result conref="merge-revisions-range.dita#merge-revisions-range/merge-result"/>
    <postreq conref="merge-revisions-range.dita#merge-revisions-range/merge-postreq"/>
  </taskbody>
</task>
