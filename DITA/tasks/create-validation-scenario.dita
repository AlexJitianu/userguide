<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="create-validation-scenario">
  <title>How to Create a Validation Scenario</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Create Validation Scenario</indexterm>
        <indexterm>Edit Validation Scenario</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>To create a validation scenario, follow these steps:</context>
    <steps>
      <step>
        <cmd>Select the <uicontrol><image href="../img/ValidationConfig16.png" id="image_k3g_x5v_sr"
            />Configure Validation Scenario(s)</uicontrol> from the <menucascade
            product="editor author developer">
            <uicontrol>Document</uicontrol>
            <uicontrol>Validate</uicontrol>
          </menucascade>
          <menucascade product="editorEclipse authorEclipse developerEclipse">
            <uicontrol>XML</uicontrol>
          </menucascade> menu, or the <ph product="author developer editor"><uicontrol><image
                href="../img/ValidateDrop.png" id="image_dyn_x5v_sr"/>Validation</uicontrol> toolbar
            drop-down menu</ph><ph product="authorEclipse developerEclipse editorEclipse"
            >toolbar</ph>, or from the <uicontrol>Validate</uicontrol> submenu when invoking the
          contextual menu on a file in the <ph product="developer editor"
              ><uicontrol>Project</uicontrol> view</ph>
          <ph product="developerEclipse editorEclipse"><uicontrol>Navigator</uicontrol>
          view</ph>.</cmd>
        <stepresult>The <uicontrol>Configure Validation Scenario(s)</uicontrol> dialog box is
          displayed. It contains the following types of scenarios:<ul>
            <li><b>Predefined</b> scenarios are organized in categories depending on the type of
              file they apply to. You can identify <uicontrol>Predefined</uicontrol> scenarios by a
              yellow key icon that marks them as <i>read-only</i>. If the predefined scenario is the
              default scenario of the framework, its name is written in bold font. You can use the
              options in the <uicontrol><image href="../img/Settings16.png" id="image_bvc_zd5_fs"
                />Settings</uicontrol> drop-down menu to filter which scenarios are shown.</li>
            <li><b>User defined</b> scenarios are organized under a single category, but you can use
              the options in the <uicontrol><image href="../img/Settings16.png"
                  id="image_osh_3xt_fs"/>Settings</uicontrol> drop-down menu to filter them.<note>If
                the current file has no associated scenarios, the preview area displays a message to
                let you know that you can apply the default validation. </note></li>
          </ul><fig id="figure-configure-validation-scenario-oxygen"
            product="editor author developer">
            <title>Configure Validation Scenario</title>
            <image href="../img/sa_validation_scenario_list_dialog.png"/>
          </fig><fig id="figure-configure-validation-scenario-oxygenEclipse"
            product="editorEclipse authorEclipse developerEclipse">
            <title>Configure Validation Scenario</title>
            <image href="../img/ec_validation_scenario_list_dialog.png"/>
          </fig></stepresult>
      </step>
      <step>
        <cmd>To edit an existing scenario, select the scenario and press the
            <uicontrol>Edit</uicontrol> button. If you try to edit one of the <i>read-only</i>
          predefined scenarios, <ph keyref="product"/> creates a customizable duplicate (you can
          also use the <uicontrol>Duplicate</uicontrol> button).</cmd>
      </step>
      <step id="vs_1">
        <cmd>To add a new scenario, press the <uicontrol><image href="../img/Add16.png"
              id="image_b34_k3r_xr"/>New</uicontrol> button.</cmd>
        <stepresult>The <uicontrol>New scenarios</uicontrol> dialog box is displayed. It lists all
          the validation units for the scenario.<fig id="figure-edit-validation-scenario-oxygen"
            product="author developer editor">
            <title>Add / Edit a Validation Unit</title>
            <image href="../img/sa_edit_validation_scenario_dialog.png" id="image_uss_w3r_xr"/>
          </fig><fig id="figure-edit-validation-scenario-oxygenEclipse"
            product="editorEclipse authorEclipse developerEclipse">
            <title>Add / Edit a Validation Unit</title>
            <image href="../img/ec_edit_validation_scenario_dialog.png" id="image_vss_w3r_xr"/>
          </fig><p>The <uicontrol>New scenario</uicontrol> dialog box includes the following
            information:</p><ul id="ul_wss_w3r_xr">
            <li><uicontrol>Name</uicontrol> - The name of the current validation scenario.</li>
            <li product="author developer editor"><uicontrol>Storage</uicontrol> - You can choose
              between storing the scenario in the <uicontrol>Global Options</uicontrol> or
                <uicontrol>Project Options</uicontrol>.</li>
            <li><uicontrol>URL of the file to validate</uicontrol> - The URL of the main module that
              includes the current module. It is also the entry module of the validation process
              when the current one is validated.</li>
            <li><uicontrol>File type</uicontrol> - The type of the document that is validated in the
              current validation unit. <ph keyref="product"/> automatically selects the file type
              depending on the value of the <uicontrol>URL of the file to validate</uicontrol>
              field.</li>
            <li><uicontrol>Validation engine</uicontrol> - One of the engines available in <ph
                keyref="product"/> for validation of the type of document to which the current
              module belongs. <uicontrol>Default engine</uicontrol> means that the default engine is
              used to run the validation and is set in the <uicontrol>Preferences</uicontrol> pages
              for the current document type (XML, XML Schema, XSLT, XQuery, etc.).</li>
            <li product="author editor authorEclipse editorEclipse"><uicontrol>Automatic
                validation</uicontrol> - If this option is checked, the validation operation defined
              by this row is also applied by <xref href="../topics/automatic-validation.dita">the
                automatic validation feature</xref>. If the <uicontrol>Automatic
                validation</uicontrol> feature is <xref
                href="../topics/preferences-editor-document-checking.dita">disabled in
                Preferences</xref>, then this option is ignored, as the Preference setting has a
              higher priority.</li>
            <li product="developer developerEclipse"><uicontrol>Automatic validation</uicontrol> -
              If this option is checked, the validation operation defined by this row is also
              applied by the automatic validation feature. If the <uicontrol>Automatic
                validation</uicontrol> feature is disabled in Preferences, then this option is
              ignored, as the Preference setting has a higher priority.</li>
            <li><uicontrol>Schema</uicontrol> - This option becomes active when you set the
                <uicontrol>File type</uicontrol> to <uicontrol>XML Document</uicontrol>.</li>
            <li><uicontrol><image href="../img/OptionsShortcut16.gif" id="image_bjn_5jr_xr"
                />Settings</uicontrol> - Opens the <uicontrol>Specify Schema</uicontrol> dialog box
              that allows you to set a schema for validating XML documents, or a list of extensions
              for validating XSL or XQuery documents. You can also set a default phase for
              validation with a Schematron schema.</li>
          </ul></stepresult>
      </step>
      <step id="vd_3">
        <cmd>If you want to add a new validation unit, press the <uicontrol>Add</uicontrol>
          button.</cmd>
      </step>
      <step id="vd_4">
        <cmd>To edit the URL of the main validation module, <ph product="author developer editor"
            >double-</ph>click its cell in the <uicontrol>URL of the file to validate</uicontrol>
          column.</cmd>
        <info>
          <p>Specify the URL of the main module by doing one of the following:<ul>
              <li>Enter the URL in the text field or select it from the drop-down list.</li>
              <li>Use the <uicontrol><image href="../img/BrowseDrop.png" id="image_jvt_lkr_xr"
                  />Browse</uicontrol> drop-down button to browse for a local, remote, or archived
                file.</li>
              <li>Use the <uicontrol><image href="../img/InsertEditorVariables16.png"
                    id="image_dl4_hxm_wr"/>Insert Editor Variable</uicontrol> button to insert an
                  <xref href="../topics/editor-variables.dita">editor variable</xref> or a <xref
                  href="../topics/custom-editor-variables.dita">custom editor variable</xref>.<fig
                  product="author developer editor">
                  <title>Insert an Editor Variable</title>
                  <image href="../img/sa_editor_variables_menu.png"/>
                </fig><fig product="editorEclipse authorEclipse developerEclipse">
                  <title>Insert an Editor Variable</title>
                  <image href="../img/ec_editor_variables_menu.png"/>
                </fig></li>
            </ul></p>
        </info>
      </step>
      <step id="vs_5">
        <cmd>Select the <uicontrol>File type</uicontrol> of the validated document.</cmd>
        <info>Note that this determines the list of possible validation engines.</info>
      </step>
      <step id="vs_6">
        <cmd>Select the <uicontrol>Validation engine</uicontrol> by clicking its cell and selecting
          it from the drop-down list.</cmd>
      </step>
      <step id="vs_7">
        <cmd>Select the <uicontrol>Automatic validation</uicontrol> option if you want the current
          unit to be used by <xref href="../topics/automatic-validation.dita"
            product="author editor authorEclipse editorEclipse">the automatic validation
            feature</xref><ph product="developer developerEclipse">the automatic validation
            feature</ph>.</cmd>
      </step>
      <step id="vs_8">
        <cmd>Choose the schema to be used during validation (the schema detected after parsing the
          document or a custom one).</cmd>
      </step>
      <step>
        <cmd>Press <uicontrol>OK</uicontrol>.</cmd>
        <stepresult>The newly created validation scenario is now included in the list of scenarios
          in the <uicontrol>Configure Validation Scenario(s)</uicontrol> dialog box. You can select
          the scenario in this dialog box to associate it with the current document and press the
            <uicontrol>Apply associated</uicontrol> button to run the validation
          scenario.</stepresult>
      </step>
    </steps>
  </taskbody>
</task>
