<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="xquery-db-tranformation">
  <title>XQuery Transformation</title>
  <prolog>
    <metadata>
      <keywords><indexterm>Databases<indexterm>XQuery<indexterm>transformation</indexterm></indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>XQuery is designed to retrieve and interpret XML data from any source, whether it is a
      database or a document. Data is stored in relational databases but often it is required that
      data is extracted and transformed as XML when interfacing to other components and services.
      Also, it is an XPath-based querying language supported by most NXD vendors. To perform a query
      you need an XQuery transformation scenario.</context>
    <steps>
      <step>
        <cmd>Configure a data source for the database.</cmd>
        <info>The data source can be <xref
            href="../topics/relational-database-support.dita#relational-database-support"
            format="dita">relational</xref> or <xref
            href="../topics/native-xml-database-support.dita#native-xml-database-support"
            format="dita">XML native</xref>.</info>
      </step>
      <step>
        <cmd>Configure an XQuery transformation scenario.</cmd>
        <substeps>
          <substep>
            <cmd>Click the <uicontrol><image href="../img/bt_transform_config.png"/>Configure
                Transformation Scenario</uicontrol> toolbar button or go to menu <menucascade>
                <uicontrol>Document</uicontrol>
                <uicontrol>Transformation</uicontrol>
                <uicontrol>Configure Transformation Scenario</uicontrol>
              </menucascade>.</cmd>
            <stepresult><p>The dialog for configuring a scenario will be opened.</p><image
                href="../img/sa_config_transf_scenario_xquery.png" product="editor developer"/><image
                href="../img/ec_config_transf_scenario_xquery.png" product="editorEclipse developerEclipse"
              /></stepresult>
          </substep>
          <substep>
            <cmd>Click the <uicontrol>New</uicontrol> button of the dialog.</cmd>
            <stepresult>
              <p>The dialog for editing an XQuery scenario will be opened.</p>
              <fig id="figure-edit-scenario-xquery-db-transform">
                <title>Edit Scenario Dialog</title>
                <image href="../img/sa_edit_scenario_xquery.png" product="editor developer"/>
                <image href="../img/ec_edit_scenario_xquery.png" product="editorEclipse developerEclipse"/>
              </fig>
            </stepresult>
          </substep>
          <substep>
            <cmd>Insert the scenario name in the dialog for editing the scenario.</cmd>
          </substep>
          <substep>
            <cmd>Choose the database connection in the <uicontrol>Transformer</uicontrol> combo
              box.</cmd>
          </substep>
          <substep>
            <cmd>Configure any other parameters if necessary.</cmd>
            <info>For an XQuery transformation the output tab has an option called
                <uicontrol>Sequence</uicontrol> which allows you to execute an XQuery in lazy mode.
              The amount of data extracted from the database is controlled from option <xref
                href="../topics/preferences-xquery.dita">Size limit on Sequence view</xref>. If you
              choose <uicontrol>Perform FO Processing</uicontrol> in the <uicontrol>FO
                Processor</uicontrol> tab, the <uicontrol>Sequence</uicontrol> option is
              ignored.</info>
          </substep>
          <substep>
            <cmd>Click the <uicontrol>OK</uicontrol> button to finish editing the scenario.</cmd>
          </substep>
        </substeps>
        <info>Once the scenario is associated with the XQuery file, the query can include calls to
          specific XQuery functions implemented by that engine. The available functions depend on
          the target database engine selected in the scenario. For example for eXist and Berkeley DB
          XML, <xref href="../topics/syntax-highlight-and-content-completion.dita">the
              <uicontrol>Content Completion Assistant</uicontrol></xref> lists the functions
          supported by that database engine. This is useful for inserting in the query only calls to
          the supported functions (standard XQuery functions or extension ones).<note>An XQuery
            transformation is executed against a Berkeley DB XML server as a transaction using the
            query transaction support of the server.</note></info>
      </step>
      <step>
        <cmd>Run the scenario.</cmd>
        <info>
          <p>To view a more complex value returned by the query that cannot be displayed entirely in
            the XQuery query result table at the bottom of the <ph
                keyref="product"/>
            window, for example an XMLTYPE
            value or a CLOB value, do the following actions:</p>
          <ul>
            <li>right click on that table cell;</li>
            <li>select the <uicontrol>Copy cell</uicontrol> action from the popup menu for copying
              the value in the clipboard;</li>
            <li>paste the value where you need it, for example an opened XQuery editor panel of <ph
                  keyref="product"/>.</li>
          </ul>
        </info>
      </step>
    </steps>
  </taskbody>
</task>