<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="xquery-db-tranformation">
  <title>XQuery Transformation</title>
  <!--Proofed-->
  <prolog>
    <metadata>
      <keywords><indexterm>Databases<indexterm>XQuery<indexterm>transformation</indexterm></indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>XQuery is designed to retrieve and interpret XML data from any source, whether it is a
      database or document. Data is stored in relational databases but it is often required that the
      data be extracted and transformed as XML when interfacing to other components and services.
      Also, it is an XPath-based querying language supported by most NXD vendors. To perform a
      query, you need an XQuery transformation scenario.</context>
    <steps>
      <step>
        <cmd>Configure a data source for the database.</cmd>
        <info>The data source can be <xref
            href="../topics/relational-database-support.dita#relational-database-support"
            format="dita">relational</xref> or <xref
            href="../topics/native-xml-database-support.dita#native-xml-database-support"
            format="dita">XML native</xref>.</info>
      </step>
      <step>
        <cmd>Configure an XQuery transformation scenario.</cmd>
        <substeps>
          <substep>
            <cmd>Click the <uicontrol><image href="../img/bt_transform_config.png"/>Configure
                Transformation Scenario</uicontrol> toolbar button or go to menu <menucascade>
                <uicontrol>Document</uicontrol>
                <uicontrol>Transformation</uicontrol>
                <uicontrol>Configure Transformation Scenario</uicontrol>
              </menucascade>.</cmd>
            <stepresult><p>The dialog for configuring a scenario is opened.</p><image
                href="../img/sa_config_transf_scenario_xquery.png" product="editor developer"
                /><image href="../img/ec_config_transf_scenario_xquery.png"
                product="editorEclipse developerEclipse"/></stepresult>
          </substep>
          <substep>
            <cmd>Click the <uicontrol>New</uicontrol> button in the dialog.</cmd>
            <stepresult>
              <p>The dialog for editing an XQuery scenario is opened.</p>
              <fig id="figure-edit-scenario-xquery-db-transform">
                <title>Edit Scenario Dialog</title>
                <image href="../img/sa_edit_scenario_xquery.png" product="editor developer"/>
                <image href="../img/ec_edit_scenario_xquery.png" product="editorEclipse developerEclipse"/>
              </fig>
            </stepresult>
          </substep>
          <substep>
            <cmd>Insert the scenario name in the dialog for editing the scenario.</cmd>
          </substep>
          <substep>
            <cmd>Choose the database connection in the <uicontrol>Transformer</uicontrol> drop-down
              list.</cmd>
          </substep>
          <substep>
            <cmd>Configure any other parameters as needed.</cmd>
            <info>For an XQuery transformation, the output tab has an option called
                <uicontrol>Sequence</uicontrol> that allows you to execute an XQuery in lazy mode.
              The amount of data extracted from the database is controlled from the option <xref
                href="../topics/preferences-xquery.dita">Size limit on Sequence view</xref>. If you
              choose <uicontrol>Perform FO Processing</uicontrol> in the <uicontrol>FO
                Processor</uicontrol> tab, the <uicontrol>Sequence</uicontrol> option is
              ignored.</info>
          </substep>
          <substep>
            <cmd>Click the <uicontrol>OK</uicontrol> button to finish editing the scenario.</cmd>
          </substep>
        </substeps>
        <info>Once the scenario is associated with the XQuery file, the query can include calls to
          specific XQuery functions that are implemented by that engine. The available functions
          depend on the target database engine selected in the scenario. For example, for eXist and
          Berkeley DB XML, <xref href="../topics/syntax-highlight-and-content-completion.dita">the
              <uicontrol>Content Completion Assistant</uicontrol></xref> lists the functions
          supported by that database engine. This is useful for only inserting calls to the
          supported functions (standard XQuery functions or extension ones) into the query .<note>An
            XQuery transformation is executed against a Berkeley DB XML server as a transaction
            using the query transaction support of the server.</note></info>
      </step>
      <step>
        <cmd>Run the scenario.</cmd>
        <info>
          <p>To view a more complex value returned by the query that cannot be entirely displayed in
            the XQuery query result table at the bottom of the <ph keyref="product"/> window (for
            example, an XMLTYPE or CLOB value), do the following:</p>
          <ul>
            <li>Right-click on that table cell.</li>
            <li>Select the <uicontrol>Copy cell</uicontrol> action from the pop-up menu to copy the
              value into the clipboard.</li>
            <li>Paste the value wherever you need it (for example, in an opened XQuery editor panel
              of <ph keyref="product"/>).</li>
          </ul>
        </info>
      </step>
    </steps>
  </taskbody>
</task>