<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="documentation-XSLT-Stylesheet">
  <title>Generating Documentation for an XSLT Stylesheet</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Editing XSLT Stylesheets<indexterm>generate documentation for XSLT
            stylesheets</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>You can use <ph keyref="product"/> to generate
      detailed documentation in HTML format for the elements (top-level elements whose names are in
      the XSLT namespace) of an XSLT stylesheet. You are able to select what XSLT elements to
      include in the generated documentation and also the level of details to present for each of
      them. The elements are hyperlinked. To generate documentation in a custom format, other than
      HTML, you can edit the XSLT stylesheet used to generate the documentation, or create your own
      stylesheet.</p>
    <p>To open the <uicontrol>XSLT Stylesheet Documentation</uicontrol> dialog, go to <menucascade>
        <uicontrol product="editor developer">Tools</uicontrol>
        <uicontrol product="editorEclipse developerEclipse">XML Tools</uicontrol>
        <uicontrol>Generate Documentation</uicontrol>
        <uicontrol>XSLT Stylesheet Documentation... <shortcut
            conref="oxygen-shortcuts-list.dita#oxygen-shortcuts-list/ctrl_alt_x_shortcut"
            product="developer editor"/></uicontrol>
      </menucascade> action. <ph product="editor developer">You can also select <menucascade>
          <uicontrol>Generate Documentation</uicontrol>
          <uicontrol>XSLT Stylesheet Documentation... </uicontrol>
        </menucascade> in the contextual menu of the <uicontrol>Project</uicontrol> view.</ph>
      <ph product="editorEclipse developerEclipse">You can also select <menucascade>
          <uicontrol>Generate Stylesheet Documentation</uicontrol>
        </menucascade> in the contextual menu of the <uicontrol>Navigator</uicontrol>.</ph></p>
    <fig id="figure-xslt-doc-dialog-output-panel-oxygen" product="editor developer">
      <title>The Output Panel of the XSLT Stylesheet Documentation Dialog</title>
      <image href="../img/sa_xslt_doc_dialog_output_panel.png"/>
    </fig>
    <fig id="figure-xslt-doc-dialog-output-panel-oxygenEclipse"
      product="editorEclipse developerEclipse">
      <title>The Output Panel of the XSLT Stylesheet Documentation Dialog</title>
      <image href="../img/ec_xslt_doc_dialog_output_panel.png"/>
    </fig>
    <p>The <uicontrol>XSL URL</uicontrol> field of the dialog panel must contain the full path to
      the XSL Stylesheet file you want to generate documentation for. The stylesheet can be either a
      local or a remote one. You can also specify the path of the stylesheet using editor
      variables.</p>
    <p>You can choose to split the output into multiple files using different split criteria. For
      large XSLT stylesheets being documented, choosing a different split criterion may generate
      smaller output files providing a faster documentation browsing.</p>
    <p>The available split criteria are:<ul>
        <li>by location - Each output file contains the XSLT elements from the same stylesheet.</li>
        <li>by namespace - Each output file contains information about elements with the same
          namespace.</li>
        <li>by component - Each output file contains information about one stylesheet XSLT
          element.</li>
      </ul>
    </p>
    <p product="editor developer">You can export the settings of the <uicontrol>XSLT Stylesheet
        Documentation</uicontrol> dialog to an XML file by pressing the <uicontrol>Export
        settings</uicontrol> button. With the exported settings file, you can generate the same
        <xref href="documentation-XSLT-Stylesheet-command-line.dita">documentation from the
        command-line interface</xref>.</p>
    <fig id="figure-xslt-doc-dialog-settings-panel-oxygen" product="editor developer">
      <title>The Settings Panel of the XSLT Stylesheet Documentation Dialog</title>
      <image href="../img/sa_xslt_doc_dialog_settings_panel.png"/>
    </fig>
    <fig id="figure-xslt-doc-dialog-settings-panel-oxygenEclipse"
      product="editorEclipse developerEclipse">
      <title>The Settings Panel of the XSLT Stylesheet Documentation Dialog</title>
      <image href="../img/ec_xslt_doc_dialog_settings_panel.png"/>
    </fig>
    <p>When you generate documentation for an XSLT stylesheet you can choose what XSLT elements to
      include in the output (templates, functions, global parameters, global variables, attribute
      sets, character maps, keys, decimal formats, output formats, XSLT elements from referenced
      stylesheets) and the details to include in the documentation: </p>
    <ul>
      <li><uicontrol>Documentation</uicontrol> - Shows the documentation for each XSLT element. For
        HTML format, the user-defined data elements that are recognized and transformed in
        documentation blocks of the XSLT elements they precede, are the ones from the following schemas:<ul>
          <li><ph keyref="product"/> built-in XSLT
            documentation schema.</li>
          <li>A subset of Docbook 5 elements. The recognized elements are: <codeph>section</codeph>,
              <codeph>sect1</codeph> to <codeph>sect5</codeph>, <codeph>emphasis</codeph>,
              <codeph>title</codeph>, <codeph>ulink</codeph>, <codeph>programlisting</codeph>,
              <codeph>para</codeph>, <codeph>orderedlist</codeph>,
            <codeph>itemizedlist</codeph>.</li>
          <li>A subset of DITA elements. The recognized elements are: <codeph>concept</codeph>,
              <codeph>topic</codeph>, <codeph>task</codeph>, <codeph>codeblock</codeph>,
              <codeph>p</codeph>, <codeph>b</codeph>, <codeph>i</codeph>, <codeph>ul</codeph>,
              <codeph>ol</codeph>, <codeph>pre</codeph>, <codeph>sl</codeph>, <codeph>sli</codeph>,
              <codeph>step</codeph>, <codeph>steps</codeph>, <codeph>li</codeph>,
              <codeph>title</codeph>, <codeph>xref</codeph>.</li>
          <li>Full XHTML 1.0 support.</li>
          <li>XSLStyle documentation environment. XSLStyle uses DocBook or DITA languages inside its
            own user-defined data elements. The supported DocBook and DITA elements are the ones
            mentioned above.</li>
          <li>Doxsl documentation framework. Supported elements are : <codeph>codefrag</codeph>,
              <codeph>description</codeph>, <codeph>para</codeph>, <codeph>docContent</codeph>,
              <codeph>documentation</codeph>, <codeph>parameter</codeph>, <codeph>function</codeph>,
              <codeph>docSchema</codeph>, <codeph>link</codeph>, <codeph>list</codeph>,
              <codeph>listitem</codeph>, <codeph>module</codeph>, <codeph>parameter</codeph>,
              <codeph>template</codeph>, <codeph>attribute-set</codeph>;<p>Other XSLT documentation
              blocks that are not recognized will just be serialized inside an HTML
                <codeph>pre</codeph> element. You can change this behavior by using a <xref
                href="custom-documentation-XSLT-Stylesheet.dita">custom format</xref> instead of the
              built-in <xref href="HTML-documentation-XSLT-Stylesheet.dita">HTML format</xref> and
              providing your own XSLT stylesheets.</p></li>
        </ul></li>
      <li><uicontrol>Use comments</uicontrol> - Controls whether the comments that precede an XSLT
        element is treated as documentation for the element they precede. Comments that precede or
        succeed the <codeph>xsl:stylesheet</codeph> element, are treated as documentation for the
        whole stylesheet. Please note that comments that precede an import or include directive are
        not collected as documentation for the imported/included module. Also comments from within
        the body of the XSLT elements are not collected at all.</li>
      <li><uicontrol>Namespace</uicontrol> - Shows the namespace for named XSLT elements.</li>
      <li><uicontrol>Location</uicontrol> - Shows the stylesheet location for each XSLT
        element.</li>
      <li><uicontrol>Parameters</uicontrol> - Shows parameters of templates and functions.</li>
      <li><uicontrol>References</uicontrol> - Shows the named XSLT elements that are referenced from
        within an element.</li>
      <li><uicontrol>Used by</uicontrol> - Shows the list of all the XSLT elements that reference
        the current named element.</li>
      <li><uicontrol>Supersedes</uicontrol> - Shows the list of all the XSLT elements that are
        superseded the current element.</li>
      <li><uicontrol>Overriding</uicontrol> - Shows the list of all the XSLT elements that override
        the current element.</li>
      <li><uicontrol>Return type</uicontrol> - Shows the return type of the function.</li>
      <li><uicontrol>Source</uicontrol> - Shows the text stylesheet source for each XSLT
        element.</li>
      <li><uicontrol>Import precedence</uicontrol> - Shows the computed import precedence as
        declared in XSL transformation specifications.</li>
      <li><uicontrol>Generate index</uicontrol> - Creates an index with all the XSLT elements
        included in the documentation.</li>
      <li><uicontrol>Load settings / Export settings</uicontrol> - The current settings can be saved
        for further usage (for example for generating documentation from command-line interface)
        with the <uicontrol>Export settings</uicontrol> button, and reloaded when necessary with the
          <uicontrol>Load settings</uicontrol> button.</li>
    </ul>
  </body>
  <related-links>
    <link href="XSLT-Stylesheet-documentation-support.dita"/>
    <link
      href="documentation-XSLT-Stylesheet-command-line.dita#documentation-XSLT-Stylesheet-command-line"
    />
  </related-links>
</topic>
