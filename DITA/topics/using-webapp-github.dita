<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="using-webapp-github">
  <title>Using the <ph keyref="webappProduct"/> with a GitHub Repository</title>
  <body>
    <p><ph keyref="webappProduct"/> includes a <i>GitHub</i> plugin that allows you to edit files stored in
      a GitHub repository. The procedure in this topic assumes that this plugin is enabled in your
      installation of <ph keyref="webappProduct"/>.</p>
    <p>To open a file stored in a GitHub repository, use the dedicated <i>GitHub Open Action</i>
      button in the <uicontrol>Open file</uicontrol> section of the main dashboard. If your
      connection has not yet been configured, a <uicontrol>Configure GitHub</uicontrol> dialog box
      will be displayed that provides instructions for configuring and selecting the URL for the
      connection.</p>
    <p>To commit a file to a GitHub repository, select the <uicontrol>Commit on GitHub</uicontrol>
      action. A dialog box will be opened that allows you to enter a <i>commit message</i> and
      displays the branch on which the commit will be processed (you can also edit the name of the
      branch in this dialog box). <ul>
        <li>When committing on a branch that is different from the branch of the currently opened
          document and the branch does not exist, <ph keyref="webappProduct"/> will attempt to
          create it.</li>
        <li>If someone else has committed the current document since the time you opened it (causing
          conflicts), a <uicontrol>Commit Status</uicontrol> confirmation dialog box will appear.<fig>
            <title>Commit Status Dialog Box</title>
            <image href="../img/commit_status.png"/>
          </fig><p>The <uicontrol>Commit Status</uicontrol> dialog box allows you to choose the
            following options:<ul>
              <li>You can click the link at the top of the dialog box to see the difference between
                the two commits.</li>
              <li><uicontrol>Commit on a fresh branch</uicontrol> - Creates a new branch that
                contains your version of the document so that you can merge the changes at a later
                time, after the conflicts have been solved.</li>
              <li><uicontrol>Commit anyway</uicontrol> - Commits the changes regardless of whether
                or not there was a conflict, and the changes made by the other user are lost.</li>
              <li><uicontrol>Cancel</uicontrol> - Cancels the operation and your changes are not
                committed to the repository. Before cancelling, you could click the link at the top
                to see the differences, correct the conflicts manually, and then commit afterwards
                using the <uicontrol>Commit anyway</uicontrol> option.</li>
            </ul></p></li>
      </ul></p>
  </body>
</topic>
