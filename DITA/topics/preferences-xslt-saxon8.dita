<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-xslt-saxon8">
  <title>Saxon-HE/PE/EE Preferences</title>
  <!--Proofed-->
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Configure the Application<indexterm>XSLT/FO/XQuery preferences<indexterm>Saxon
              HE/PE/EE</indexterm><indexterm>Saxon-HE/PE/EE</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>To configure the <uicontrol>Saxon HE/PE/EE</uicontrol> options, <ph
        conkeyref="reusable_menus/open-the-preferences-page"/> and go to  <menucascade>
        <uicontrol>XML</uicontrol>
        <uicontrol>XSLT/FO/XQuery</uicontrol>
        <uicontrol>XSLT</uicontrol>
        <uicontrol>Saxon</uicontrol>
        <uicontrol>Saxon HE/PE/EE</uicontrol>
      </menucascade>.</p>
    <p><ph keyref="product"/> allows you to configure the following XSLT options for the Saxon <ph
        keyref="saxon9FullVersion"/> Home Edition (HE), Professional Edition (PE), and Enterprise
      Edition (EE):</p>
    <ul>
      <li>
        <uicontrol>Use a configuration file ("-config")</uicontrol> - Sets a Saxon <ph
          keyref="saxon9FullVersion"/> configuration file that is executed for XSLT transformation
        and validation processes.</li>
      <li id="saxon-option-versmsg">
        <uicontrol>Version warnings ("-versmsg")</uicontrol> - Warns you when the transformation is
        applied to an XSLT 1.0 stylesheet.</li>
      <li id="saxon-option-l">
        <uicontrol>Line numbering ("-l")</uicontrol> - Error line numbers are included in the output
        messages.</li>
      <li id="saxon-option-debug-trace" product="developer editor developerEclipse editorEclipse">
        <uicontrol>Debugger trace into XPath expressions (applies to debugging sessions)</uicontrol>
        - Instructs the <xref href="../tasks/steps-in-typical-debug-process.dita" format="dita">XSLT
          Debugger</xref><ph>XSLT Debugger</ph> to step into XPath expressions.</li>
      <li>
        <uicontrol>Expand attributes defaults ("-expand")</uicontrol> - Specifies whether or not the
        attributes defined in the associated DTD or XML Schema are expanded in the output of the
        transformation you are executing.</li>
      <li id="saxon-option-dtd">
        <uicontrol>DTD validation of the source ("-dtd")</uicontrol> - The following options are available:<ul>
          <li>
            <uicontrol>On</uicontrol> - Requests <term>DTD</term> validation of the source file and
            of any files read using the <codeph>document()</codeph> function.</li>
          <li>
            <uicontrol>Off</uicontrol> - (default setting) Suppresses DTD validation.</li>
          <li>
            <uicontrol>Recover</uicontrol> - Performs DTD validation but treats the errors as
              non-fatal.<note>Any external DTD is likely to be read even if not used for validation,
              since DTDs can contain definitions of entities. </note></li>
        </ul></li>
      <li id="saxon-option-warnings">
        <uicontrol>Recoverable errors ("-warnings")</uicontrol> - Policy for handling recoverable
        errors in the stylesheet: Allows you to choose how dynamic errors are handled. One of the
        following options can be selected:<ul>
          <li><uicontrol>Recover silently ("silent")</uicontrol> - Continues processing without
            reporting the error.</li>
          <li><uicontrol>Recover with warnings ("recover")</uicontrol> - (default setting) Issues a
            warning but continues processing.</li>
          <li><uicontrol>Signal the error and do not attempt recovery ("fatal")</uicontrol> - Issues
            an error and stops processing.</li>
        </ul></li>
      <li id="saxon-option-strip">
        <uicontrol>Strip whitespaces ("-strip")</uicontrol> - Strip whitespaces feature can be one
        of the following three options:<ul>
          <li><uicontrol>All ("all")</uicontrol> - Strips all whitespace text nodes from source
            documents before any further processing, regardless of any
              <codeph>xsl:strip-space</codeph> declarations in the stylesheet, or any
              <codeph>xml:space</codeph> attributes in the source document.</li>
          <li><uicontrol>Ignorable ("ignorable")</uicontrol> - Strips all ignorable whitespace text
            nodes from source documents before any further processing, regardless of any
              <codeph>xsl:strip-space</codeph> declarations in the stylesheet, or any
              <codeph>xml:space</codeph> attributes in the source document. Whitespace text nodes
            are ignorable if they appear in elements defined in the DTD or schema as having
            element-only content.</li>
          <li><uicontrol>None ("none")</uicontrol> - default setting. No whitespaces are stripped
            before further processing. However, whitespace are stripped if this is specified in the
            stylesheet using <codeph>xsl:strip-space</codeph>.</li>
        </ul></li>
      <li id="saxon-option-opt">
        <uicontrol>Optimization level ("-opt")</uicontrol> - Set the optimization level. The value
        is an integer in the range 0 (no optimization) to 10 (full optimization). This option allows
        optimization to be suppressed when reducing the compiling time is important, optimization
        conflicts with debugging, or optimization causes extension functions with side-effects to
        behave unpredictably. </li>
    </ul>
    <p>The advanced options available only in Saxon Professional Edition (PE) and Enterprise Edition
      (EE) are:</p>
    <ul>
      <li id="saxon-option-ext">
        <uicontrol>Allow calls on extension functions ("-ext")</uicontrol> - If checked, the
        stylesheet is allowed to call external Java functions. This does not affect calls on
        integrated extension functions, including Saxon and EXSLT extension functions. This option
        is useful when loading an untrusted stylesheet, such as from a remote site using an
        http://[URL]. It ensures that the stylesheet cannot call arbitrary Java methods and thus
        gain privileged access to resources on your machine. </li>
      <li>
        <uicontrol>Register Saxon-CE extension functions and instructions</uicontrol> - Registers
        the Saxon-CE extension functions and instructions when compiling a stylesheet using the
        Saxon <ph keyref="saxon9FullVersion"/> processors.<note
          conref="supported-XSLT-processors.dita#supported-XSLT-processors/saxon-ce-execution-limitation"
          product="developer editor developerEclipse editorEclipse"/>
      </li>
    </ul>
    <p>The advanced options available only in Saxon Enterprise Edition (EE) are:<ul>
        <li>
          <uicontrol>XML Schema version</uicontrol> - Use this option to change the default XML
          Schema version. To change the default XML Schema version, <ph
            conkeyref="reusable_menus/open-the-preferences-page"/> and go to <menucascade>
            <uicontrol> XML</uicontrol>
            <uicontrol> XML Parser</uicontrol>
            <uicontrol> XML Schema</uicontrol>
          </menucascade>.<note>This option is available when you configure the Saxon EE advanced
            options from a transformation scenario.</note></li>
        <li id="saxon-option-val">
          <uicontrol>Validation of the source file ("-val")</uicontrol> - Requests schema-based
          validation of the source file and of any files read using the <codeph>document()</codeph>
          or similar functions. It can have the following values:<ul>
            <li><uicontrol>Schema validation ("strict")</uicontrol> - This mode requires an XML
              Schema and specifies that the source documents should be parsed with strict
              schema-validation enabled.</li>
            <li><uicontrol>Lax schema validation ("lax")</uicontrol> - If an XML Schema is provided,
              this mode enables parsing the source documents with schema-validation enabled but the
              validation will not fail if, for example, element declarations are not found.</li>
            <li><uicontrol>Disable schema validation</uicontrol> - This specifies that the source
              documents should be parsed with schema-validation disabled.</li>
          </ul></li>
        <li id="saxon-option-outval">
          <uicontrol>Validation errors in the results tree treated as warnings
            ("-outval")</uicontrol> - Normally, if validation of result documents is requested, a
          validation error is fatal. Enabling this option causes such validation failures to be
          treated as warnings. </li>
        <li id="saxon-option-outval-comments">
          <uicontrol>Write comments for non-fatal validation errors of the result
            document</uicontrol> - The validation messages are written (where possible) as a comment
          in the result document itself. </li>
        <li id="generate_bytecode_option">
          <uicontrol>Generate bytecode ("--generateByteCode:(on|off)")</uicontrol> - If you enable
          this option, <keyword>Saxon-EE</keyword> attempts to generate Java bytecode for evaluation
          of parts of a query or stylesheet that are amenable to such an action. For further details
          regarding this option, go to <xref
            href="http://www.saxonica.com/documentation9.5/index.html#!javadoc"
            format="html#GENERATE_BYTE_CODE" scope="external"/>.</li>
      </ul></p>
  </body>
</topic>