<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="working-copy-menu">
  <title>Contextual Menu Actions</title>
  <prolog>
    <metadata>
      <keywords><indexterm>SVN Client<indexterm>Working Copy view<indexterm>contextual menu
            actions</indexterm></indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <body>
    <p>The contextual menu in the Working Copy view contains the following actions: <ul>
        <li id="action_edit_conflict">
          <p><uicontrol>Edit conflict <shortcut>(Ctrl (Meta on Mac OS) + E)</shortcut></uicontrol> -
            Opens the <uicontrol>Compare</uicontrol> editor, allowing you to modify the content of
            the currently conflicting resources. For more information on editing conflicts, see
              <xref href="edit-conflict.dita">Edit conflicts</xref>.</p>
        </li>
        <li>
          <p><uicontrol>Open in Compare Editor <shortcut>(Ctrl (Meta on Mac OS) + Alt +
                C)</shortcut></uicontrol> - Displays changes made in the currently selected
            file.</p>
        </li>
        <li>
          <p><uicontrol>Open <shortcut>(Ctrl (Meta on Mac OS) + O)</shortcut></uicontrol> - Opens
            the selected resource from the working copy. Files are opened with an internal editor or
            an external application associated with that file type, while folders are opened with
            the default file system browsing application (e.g. Windows Explorer on Windows, Finder
            on Mac OS X, etc).</p>
        </li>
        <li product="svnClient">
          <p><uicontrol>Open with <shortcut>(Ctrl (Meta on Mac OS) + Shift +
              O)</shortcut></uicontrol> - Displays the <xref
              href="preferences-svn-file-editors.dita#preferences-svn-file-editors/figure-svn-open-with-dialog-preferences"
              >Open with...</xref> dialog to specify the editor in which the selected file will be
            opened. If multiple files are selected, only external applications can be used to open
            the files.</p>
        </li>
        <li product="editor author developer">
          <p><b>Open with</b> submenu that allows you to open the selected resource either with
            &lt;oXygen/> XML or with another application.</p>
        </li>
        <li>
          <p conref="svn-main-menu.dita#svn-main-menu/show-in-explorer"/>
        </li>
        <li id="action_expand_all"><uicontrol><image href="../img/ExpandAll16.png"/> Expand all
              <shortcut>(Ctrl (Meta on Mac OS) + Alt + X)</shortcut></uicontrol> - Displays all
          descendants of the selected folder. You can obtain a similar behavior by double-clicking
          on a collapsed folder.</li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_refresh_button.png"/> Refresh<shortcut>
                (F5)</shortcut></uicontrol> - Re-scans the selected resources recursively and
            refreshes their status in the working copy view.</p>
        </li>
        <li id="action_synchronize">
          <p><uicontrol><image href="../img/sa_svn_synchronize_button.png"/> Synchronize
                <shortcut>(Ctrl (Meta on Mac OS) + Shift + S)</shortcut></uicontrol> - Connects to
            the repository and determines the working copy and repository changes made to the
            selected resources. The application switches to <uicontrol>Modified</uicontrol> view
            mode if the <xref href="preferences-svn-working-copy.dita#preferences-svn-working-copy"
              format="dita">Always switch to 'Modified' mode</xref> option is selected.</p>
        </li>
        <li>
          <p><uicontrol>Update <shortcut>(Ctrl (Meta on Mac OS)+ U)</shortcut></uicontrol> - Updates
            the selected resources to the <i>HEAD</i> revision (latest modifications) from the
            repository. If the selection contains a directory, it will be updated depending on its
              <xref href="sparse-checkouts.dita">depth</xref>.</p>
        </li>
        <li id="action_update_rev_depth">
          <p><uicontrol>Update to revision/depth</uicontrol> - Allows you to update the selected
            resources from the working copy to an earlier revision from the repository. You can also
            select the update <i>depth</i> for the current folder. You can find out more about the
              <i>depth</i> term in the <xref href="sparse-checkouts.dita">sparse checkouts</xref>
            section.</p>
        </li>
        <li id="action_commit">
          <p><uicontrol>Commit</uicontrol> - Collects the outgoing changes from the selected
            resources in the working copy and allows you to choose exactly what to commit by
            selecting or not resources. A directory will always be committed recursively. The
            unversioned resources will be deselected by default. In the commit dialog you can also
            enter a commit comment before sending your changes to the repository.</p>
        </li>
        <li id="action_revert">
          <p><uicontrol><image href="../img/SVNRevert16.png"/> Revert <shortcut>(Ctrl (Meta on Mac
                OS) + Shift + V)</shortcut></uicontrol> - Undoes all local changes for the selected
            resources. It does not contact the repository, the files are obtained from <ph
              conref="oxygenEntitiesDictionary.dita#OxygenEntities/apacheSubversion"/> pristine
            copy. It is enabled only for modified resources. See <xref href="revert-changes.dita"
              >Revert your changes</xref> for more information.</p>
        </li>
        <li id="action_override_update">
          <p><uicontrol>Override and Update</uicontrol> - Drops any outgoing change and replaces the
            local resource with the HEAD revision. Action available on resources with outgoing
            changes, including the conflicting ones. See the <xref href="revert-changes.dita">Revert
              your changes</xref> section.</p>
        </li>
        <li id="action_override_commit">
          <p><uicontrol>Override and Commit</uicontrol> - Drops any incoming changes and sends your
            local version of the resource to the repository. Action available on conflicting
            resources. See also the section <xref href="drop-incoming.dita">Drop incoming
              modifications</xref>.</p>
        </li>
        <li id="action_mark_resolved">
          <p><uicontrol><image href="../img/SVNMarkResolved16.png"/> Mark Resolved <shortcut>(Ctrl
                (Meta on Mac OS) + Shift + R)</shortcut></uicontrol> - Instructs the Subversion
            system that you resolved a conflicting resource. For more information, see <xref
              href="merge-conflicts.dita">Merge conflicts</xref>.</p>
        </li>
        <li id="action_mark_merged"><uicontrol><image href="../img/SVNMarkAsMerged16.png"/> Mark as
            Merged <shortcut>(Ctrl (Meta on Mac OS) + Shift + M)</shortcut></uicontrol> - Instructs
          the Subversion system that you resolved the pseudo-conflict by merging the changes and you
          want to commit the resource. Read the <xref href="merge-conflicts.dita">Merge
            conflicts</xref> section for more information about how you can solve the
          pseudo-conflicts.</li>
        <li id="action_create_patch"><uicontrol><image href="../img/SVNPatch16.png"/> Create patch
              <shortcut>(Ctrl (Meta on Mac OS) + Alt + P)</shortcut></uicontrol> - Allows you to
          create a file containing all the differences between two resources, based on the
            <codeph>svn diff</codeph> command. To read more about creating patches, see <xref
            href="../tasks/create-patch-wc-repository.dita">the section about patches</xref>.</li>
        <li>
          <p><uicontrol>Compare with</uicontrol>: <ul>
              <li>
                <p><uicontrol>Latest from HEAD <shortcut>(Ctrl (Meta on Mac OS) + Alt +
                      H)</shortcut></uicontrol> - Performs a 3-way diff operation between the
                  selected file and the <i>HEAD</i> revision from the repository and displays the
                  result in the <uicontrol>Compare view</uicontrol>. The common ancestor of the
                  3-way diff operation is the <i>BASE</i> version of the file from the local working
                  copy.</p>
              </li>
              <li>
                <p><uicontrol>BASE revision <shortcut>(Ctrl (Meta on Mac OS) + Alt +
                    C)</shortcut></uicontrol> - Compares the working copy file with the BASE
                  revision file (the so-called <i>pristine copy</i>).</p>
              </li>
              <li>
                <p><uicontrol>Revision <shortcut>(Ctrl (Meta on Mac OS) + Alt +
                    R)</shortcut></uicontrol> - Shows the <uicontrol>History view</uicontrol>
                  containing the log history of that resource.</p>
              </li>
              <li>
                <p><uicontrol>Branch/Tag</uicontrol> - Compares the working copy file with a
                  revision of the file from a branch or tag. The revision is specified by URL
                  (selected with a repository browser dialog) and revision number (selected with a
                  revision browser dialog).</p>
              </li>
              <li>
                <p><uicontrol>Each other</uicontrol> - Compares two selected files with each
                  other.</p>
              </li>
            </ul> These <i>compare</i> actions are enabled only if the selected resource is a
            file.</p>
        </li>
        <li>
          <p><uicontrol>Replace with</uicontrol>: <ul>
              <li>
                <p><uicontrol>Latest from HEAD</uicontrol> - Replaces the selected resources with
                  their versions from the <i>HEAD</i> revision of the repository.</p>
              </li>
              <li>
                <p><uicontrol>BASE revision</uicontrol> - Replace the selected resources with their
                  versions from the pristine copy (the BASE revision).</p>
              </li>
            </ul></p>
          <note>In some cases it is impossible to replace the current selected resources with their
            versions from the <i>BASE/HEAD</i> revision:<ul>
              <li>
                <p>for <uicontrol>Replace with BASE revision</uicontrol> action, the resources being
                  unversioned or added have no <i>BASE</i> revision, so they cannot be replaced.
                  However, they will be deleted if the action is invoked on a parent folder. The
                  action will never work for missing folders or for obstructing files (folders being
                  obstructed by a file), because you cannot recover a tree of folders;</p>
              </li>
              <li>for <uicontrol>Replace with latest from HEAD</uicontrol> action, you must be aware
                that there are cases when resources will be completely deleted or reverted to BASE
                revision and after that updated to HEAD revision, in order to avoid conflicts. These
                cases are:<ul>
                  <li>the resource is <i>unversioned</i>, <i>added</i>, <i>obstructed</i> or
                      <i>modified</i>;</li>
                  <li>the resource is affected by a <i>svn:ignore</i> or <i>svn:externals</i>
                    property which is locally added on the parent folder and not yet committed to
                    the repository.</li>
                </ul></li>
            </ul></note>
        </li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_show_history.png"/> Show History <shortcut>(Ctrl
                (Meta on Mac OS) + H)</shortcut></uicontrol> - Displays the <uicontrol>History
              view</uicontrol> where the log history for the selected resource will be presented.
            For more details about resource history see the sections about <xref
              href="history-view.dita">the resource history view</xref> and <xref
              href="show-history.dita">requesting the history for a resource</xref>.</p>
        </li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_show_annotation.png"/> Show Annotation
                <shortcut>(Ctrl (Meta on Mac OS) + Shift + A)</shortcut></uicontrol> - It will
            display the <uicontrol>Annotations view</uicontrol> where all the users that modified
            the selected resource will be presented together with the specific lines and revision
            numbers modified by each user. For more details about resource annotations see <xref
              href="annotations-view.dita">Annotations View</xref>.</p>
        </li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_revision_graph_button.png"/> Revision Graph
                <shortcut>(Ctrl (Meta on Mac OS) + G)</shortcut></uicontrol> - This action allows
            you to see the graphical representation of a resource's history. For more details about
            a resource's revision graph see <xref href="svn-history-graph.dita">Revision
              Graph</xref>.</p>
        </li>
        <li>
          <p><uicontrol>Copy URL Location <shortcut>(Ctrl (Meta on Mac OS) + Alt +
              U)</shortcut></uicontrol> - Copies the encoded URL of the selected resource from the
            Working Copy to the clipboard.</p>
        </li>
        <li id="mark-as-copied">
          <p><uicontrol>Mark as copied</uicontrol> - You can use this action to mark an item from
            the working copy as a copy of an other item under version control, when the copy
            operation was performed outside of an SVN client. The <uicontrol>Mark as
              copied</uicontrol> action is available when you select two items (both the new one and
            the source one) and depends on the state of the source item.</p>
        </li>
        <li id="mark-as-moved"><uicontrol>Mark as moved</uicontrol> - You can use this action to
          mark an item from the working copy as being moved from another location of the working
          copy, when the move operation was performed outside of an SVN client. The <uicontrol>Mark
            as moved</uicontrol> action is available when you select two items from different
          locations (both the new one and the source one (usually reported as <term>missing</term>))
          and depends on the state of the source item.</li>
        <li id="mark-as-renamed"><uicontrol>Mark as renamed</uicontrol> - You can use this action to
          mark an item from the working copy as being renamed outside of an SVN client. The
            <uicontrol>Mark as renamed</uicontrol> action is available when you select two items
          from the same directory (both the new one and the source one (usually reported as
            <term>missing</term>)) and depends on the state of the source item.</li>
        <li>
          <p><uicontrol><image href="../img/SVNCopyMove16.png"/> Copy to</uicontrol> - Copies to a
            specified location the currently selected resource(s).</p>
        </li>
        <li>
          <p><uicontrol>Move to <shortcut>(Ctrl (Meta on Mac OS)+ M)</shortcut></uicontrol> - Moves
            to a specified location the currently selected resource(s).</p>
        </li>
        <li>
          <p><uicontrol>Rename <shortcut>(F2)</shortcut></uicontrol> - You can only rename one
            resource at a time. As for the move command, a copy of the original resource will be
            made with the new name and the original will be marked as deleted.</p>
        </li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_remove_button.png"/> Delete
                <shortcut>(Delete)</shortcut></uicontrol> - Schedules selected items for deletion
            upon the next commit, removing them from the disk. Depending on the state of each item,
            you are prompted to confirm the operation.</p>
        </li>
        <li id="working-copy-new-menu-item">
          <p><uicontrol>New</uicontrol>: <ul>
              <li>
                <p><uicontrol><image href="../img/SVNNewFile16.png"/> New File</uicontrol> - Creates
                  a new file inside the selected folder. The newly created file will be added under
                  version control only if the parent folder is already versioned.</p>
              </li>
              <li>
                <p><uicontrol>New Folder <shortcut>(Ctrl (Meta on Mac OS)+ Shift +
                    F)</shortcut></uicontrol> - Creates a child folder inside the selected folder.
                  The newly created folder will be added under version control only if its parent is
                  already versioned.</p>
              </li>
              <li id="new_external_folder_operation"><uicontrol>New External Folder <shortcut>(Ctrl
                    (Meta on Mac OS) + Shift + W)</shortcut></uicontrol> - This operation allows you
                to add a new external definition on the selected folder. An externals definition is
                a mapping of a local directory to the URL - and ideally a particular revision - of a
                versioned directory, stored in the <codeph>svn:externals</codeph> property of the
                selected folder.<p>The URLs used in the externals definition format can be relative.
                  You can specify the repository URLs to which the external folders point to using
                  the following relative formats:</p><ul id="ul_bfw_5xv_g4">
                  <li><b>../</b> - Relative to the URL of the directory on which the
                      <codeph>svn:externals</codeph> property is set.</li>
                  <li><b>^/</b> - Relative to the root of the repository in which the
                      <codeph>svn:externals</codeph> property is versioned.</li>
                  <li><b>//</b> - Relative to the scheme of the URL of the directory on which the
                      <codeph>svn:externals</codeph> property is set.</li>
                  <li><b>/</b> - Relative to the root URL of the server on which the
                      <codeph>svn:externals</codeph> property is versioned.</li>
                </ul><note type="important">To change the target URL of an external definition or to
                  delete an external item, do the following:<ul id="ul_eq2_wn5_g4">
                    <li>modify or delete the item's definition found in the
                        <codeph>svn:externals</codeph> property set on the parent folder;</li>
                    <li>use the <uicontrol>Update</uicontrol> operation on the item's parent folder
                      for the change to take effect.</li>
                  </ul></note><note type="note">Syncro SVN Client does not support definitions of
                  local relative externals.</note></li>
            </ul></p>
        </li>
        <li id="action_add_version_control">
          <p><uicontrol><image href="../img/SVNAdd16.png"/> Add to version control <shortcut>(Ctrl
                (Meta on Mac OS) + Alt + V)</shortcut></uicontrol> - Allows you to schedule for
            addition resources that are not under version control. For further details, see <xref
              href="add-resources-working-copy.dita#add-resources-working-copy">Add Resources to
              Version Control </xref> section.</p>
        </li>
        <li><ph id="remove-from-version-control"><uicontrol>Remove from version control</uicontrol> -
            Schedules selected items for deletion from repository upon the next commit. The items
            are not removed from the file system after committing.</ph></li>
        <li id="action_svn_ignore">
          <p><uicontrol>Add to "svn:ignore" <shortcut>(Ctrl (Meta on Mac OS) + Alt +
              I)</shortcut></uicontrol> - Allows you to keep inside your working copy files that
            should not participate to the version control operations. This action can only be
            performed on resources not under version control. It actually modifies the value of the
              <i>svn:ignore</i> property of the resource's parent directory. Read more about this in
            the <xref href="ignore-resources-working-copy.dita#ignore-resources-working-copy"
              format="dita">Ignore Resources Not Under Version Control</xref> section.</p>
        </li>
        <li id="action_cleanup">
          <p><uicontrol><image href="../img/sa_svn_cleanup_button.png"/> Clean up <shortcut>(Ctrl
                (Meta on Mac OS) + Shift + C)</shortcut></uicontrol> - Performs a maintenance
            cleanup operation to the selected resources from the working copy. This operation
            removes the Subversion maintenance locks that were left behind. Useful when you already
            know where the problem originated and want to fix it as quickly as possible. Only active
            for resources under version control.</p>
        </li>
        <li id="action_locking">
          <p><uicontrol>Locking</uicontrol>:<ul>
              <li>
                <p><uicontrol>Scan for locks <shortcut>(Ctrl (Meta on Mac OS) +
                    L)</shortcut></uicontrol> - Contacts the repository and recursively obtains the
                  list of locks for the selected resources. A dialog containing the locked files and
                  the lock description will be displayed. Only active for resources under version
                  control. For more details see <xref href="scan-locks.dita">Scanning for
                    locks</xref>.</p>
              </li>
              <li>
                <p><uicontrol><image href="../img/Lock16.png"/> Lock <shortcut>(Ctrl (Meta on Mac
                      OS) + K)</shortcut></uicontrol> - Allows you to lock certain files for which
                  you need exclusive access. You can write a comment describing the reason for the
                  lock and you can also force (<i>steal</i>) the lock. The action is active only on
                  files under version control. For more details on the use of this action see <xref
                    href="lock-file.dita"> Locking a file</xref>.</p>
              </li>
              <li>
                <p><uicontrol><image href="../img/Unlock16.png"/> Unlock <shortcut>(Ctrl (Meta on
                      Mac OS) + Alt + K)</shortcut></uicontrol> - Releases the exclusive access to a
                  file from the repository. You can also choose to unlock it by force (<i>break the
                    lock</i>). </p>
              </li>
            </ul></p>
        </li>
        <li>
          <p><uicontrol><image href="../img/SVNProperties16.png"/> Show SVN Properties
                <shortcut>(Ctrl (Meta on Mac OS) + P)</shortcut></uicontrol> - Brings up the <xref
              href="properties-view.dita">Properties view</xref> and displays the SVN properties for
            the selected resource.</p>
        </li>
        <li>
          <p><uicontrol><image href="../img/sa_svn_information.png"/> File Information
                <shortcut>(Ctrl (Meta on Mac OS) + I)</shortcut></uicontrol> - Provides additional
            information for the selected resource from the working copy. For more details please see
              <xref href="show-info.dita">Obtain information for a resource</xref>.</p>
        </li>
      </ul>
    </p>
  </body>
</topic>