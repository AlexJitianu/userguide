<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="content-completion-xslt-stylesheets">
  <title>Content Completion in XSLT Stylesheets</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Editing XSLT Stylesheets<indexterm>content completion</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The items in the list of proposals offered by the <uicontrol>Content Completion
        Assistant</uicontrol> are context-sensitive. The proposed items are valid at the current
      caret position. You can enhance the list of proposals by specifying an additional schema. This
      schema is <xref href="preferences-content-completion-xsl.dita"> defined by the user in the
        Content Completion / XSL preferences</xref> page and can be: XML Schema, DTD, RELAX NG
      schema, or NVDL schema.</p>
    <fig>
      <title>XSLT Content Completion Window</title>
      <image href="../img/content-completion-xsl.png"/>
    </fig>
    <p>The <uicontrol>Content Completion Assistant</uicontrol> proposes the following item types,
      defined in the current stylesheet and in the imported and included XSLT stylesheets:</p>
    <ul>
      <li>template modes</li>
      <li>template names</li>
      <li>variable names</li>
      <li>parameter names</li>
      <li>key names</li>
      <li>output names</li>
    </ul>
    <note>For XSL and XSD resources, the <uicontrol>Content Completion Assistant</uicontrol>
      collects its components starting from the master files. The master files can be defined in the
      project or in the associated validation scenario. For further details about the
        <uicontrol>Master Files</uicontrol> support go to <xref
        href="defining_master_files.dita#defining_master_files">Defining Master Files at Project
        Level</xref>. </note>
    <p>The extension functions built in the Saxon <ph
        keyref="saxon6FullVersion"/> and <ph
        keyref="saxon9FullVersion"/> transformation
      engines are presented in the content completion list only if the Saxon namespace
        (<i>http://saxon.sf.net</i> for XSLT version 2.0 / 3.0 or <i>http://icl.com/saxon</i> for
      XSLT version 1.0) is declared and one of the following conditions is true:<ul>
        <li>the edited file has a transformation scenario that uses as transformation engine Saxon
            <ph keyref="saxon6FullVersion"/> (for XSLT version 1.0), Saxon <ph
            keyref="saxon9FullVersion"/> PE or Saxon <ph keyref="saxon9FullVersion"/> EE (for XSLT
          version 2.0 / 3.0).</li>
        <li>the edited file has a validation scenario that uses as validation engine Saxon <ph
            keyref="saxon6FullVersion"/> (for version 1.0), Saxon <ph keyref="saxon9FullVersion"/>
          PE or Saxon <ph keyref="saxon9FullVersion"/> EE (for version 2.0 / 3.0).</li>
        <li>the validation engine specified in <xref href="preferences-xslt.dita">Options</xref>
          page is Saxon <ph keyref="saxon6FullVersion"
          /> (for version 1.0), Saxon <ph
            keyref="saxon9FullVersion"/> PE or Saxon
            <ph keyref="saxon9FullVersion"/> EE (for
          version 2.0 / 3.0).</li>
      </ul></p>
    <p>Additionally. the Saxon-CE-specific extension functions and instructions are presented in the
      Content Completion Assistant's proposals list only if the
        <codeph>http://saxonica.com/ns/interactiveXSLT</codeph> namespace is declared.</p>
    <p>Namespace prefixes in the scope of the current context are presented at the top of the
      content completion window to speed up the insertion into the document of prefixed
      elements.</p>
    <fig id="figure-content-completion-namespace-prefixes-oxygen" product="editor developer">
      <title>Namespace Prefixes in the Content Completion Window</title>
      <image href="../img/sa_content_completion_namespace_prefixes.png"/>
    </fig>
    <fig product="editorEclipse developerEclipse">
      <title>Namespace Prefixes in the Content Completion Window</title>
      <image href="../img/ec_content_completion_namespace_prefixes.png"/>
    </fig>
    <p>For the common namespaces like XSL namespace
        (<codeph>http://www.w3.org/1999/XSL/Transform</codeph>), XML Schema namespace
        (<codeph>http://www.w3.org/2001/XMLSchema</codeph>) or Saxon namespace
        (<codeph>http://icl.com/saxon</codeph> for version 1.0,
        <codeph>http://saxon.sf.net/</codeph> for version 2.0 / 3.0), <ph keyref="product"/>
      provides an easy mode to declare them by proposing a prefix for these namespaces.</p>
  </body>
</topic>
