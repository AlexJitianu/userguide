<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="merge-options">
  <title>Merge Options</title>
  <body>
    <p>Here is the list of options that can be used when merging:</p>
    <p>
      <fig id="fig_x1b_bby_h4">
        <title>The Merge Wizard - Advanced Options</title>
        <image href="../img/sa_svn_merge_options_dialog.png" id="image_scb_bby_h4"/>
      </fig>
    </p>
    <ul id="ul_xx2_2dy_h4">
      <li><uicontrol>Depth</uicontrol> - sets the depth of the merge operation. You can specify how
        far down into your working copy the merge should go by selecting one of the following
          values:<ul id="ul_pn1_jdy_h4">
          <li>Current depth</li>
          <li>Recursive (<term>infinity</term>)</li>
          <li>Immediate children (<term>immediates</term>)</li>
          <li>File children only (<term>files</term>)</li>
          <li>This folder only (<term>empty</term>)</li>
        </ul>The <i>depth</i> term is described in the <xref href="../topics/sparse-checkouts.dita"
          >Sparse checkouts</xref> section. The default depth is the current depth of the working
        copy item receiving the merge.</li>
      <li><uicontrol>Ignore ancestry / Disable merge tracking</uicontrol> - changes the way two
        items are merged if they do not share a common ancestry. Most merges involve comparing items
        that are ancestrally related to one another. Occasionally, however, you may want to merge
        unrelated items, so, the first item will be replaced with the second item, if this option is
        not enabled. In such situations, you would want the merge to do a path-based comparison
        only, ignoring any relations between the items. For example, in case of two different files,
        having the same name and being in the same relative location, this makes the difference
        between replacing one of the files with the other one and merging their contents.<note>This
          option is selected automatically (and you cannot change this), if the URL of the merge
          source belongs to a different repository than the URL of the target working copy item (the
          one receiving the changes), because <xref
            href="final-words-merge.dita#final-words-merge/merge-from-foreign-repositories"
            >Subversion cannot track changes between different repositories</xref>.</note></li>
      <li><uicontrol>Force deletion of modified or non-versioned items, if necessary</uicontrol> -
        When the merge operation involves deleting locally modified or non-versioned items, it will
        fail if this option is not enabled. This is done in order to prevent data loss.</li>
      <li><uicontrol>Only record the merge (block revisions from getting merged)</uicontrol> -
        Enables a special mode of the merge operation, that just records it in the local merge
        tracking information, without actually performing it (does not modify any file contents or
        the structure of your working copy), when the merge tracking support is enabled. You might
        want to do so for two possible reasons:<ul id="ul_zqp_m3y_h4">
          <li>you made (or you will make) the merge manually, so you need to mark the revisions as
            having been merged to make the merge tracking system aware of them. This way, they will
            be excluded from future merges;</li>
          <li>you want to prevent one or more particular changes from being fetched in subsequent
            merges.</li>
        </ul></li>
      <li><uicontrol>Ignore line endings</uicontrol>, <uicontrol>Ignore whitespaces</uicontrol> -
        allow you to specify how the line ending and whitespace changes should be handled. By
        default, all such changes are treated as real content changes, but you can ignore them if
        you select these options. <uicontrol>Ignore whitespace changes</uicontrol> excludes changes
        in the amount of whitespaces or to their type (for example, when changing the indentation or
        changing tabs to spaces). Adding whitespaces where there were none before, or removing a
        whitespace, is still considered to be a change. <uicontrol>Ignore all
          whitespaces</uicontrol> ignores all types of whitespace changes.</li>
      <li><uicontrol>Test merge</uicontrol> - performs a dry run of the merge operation, allowing to
        "preview" it without actually performing the merge. In the <uicontrol>Console</uicontrol>
        view you will see a list of the working copy items that will be affected and how they will
        be affected. This is helpful in detecting if a merge will be successful or not, and where
        conflicts may occur.</li>
    </ul>
  </body>
</topic>
