<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="supported-XSLT-processors">
    <title>Supported XSLT Processors</title>
  <!--Proofed-->
    <prolog>
    <metadata>
      <keywords><indexterm>Transforming Documents<indexterm>supported XSLT processors</indexterm></indexterm></keywords>
    </metadata>
  </prolog>
    <body>
        <p><ph keyref="product"/> includes the following XSLT processors:</p>
        <ul>
            <li><b>Xalan <ph keyref="xalanFullVersion"
                    /></b> - <xref href="http://xml.apache.org/xalan-j/" scope="external"
                    format="html">Xalan-Java</xref> is an XSLT processor for transforming XML
                documents into HTML, text, or other XML document types. It implements XSL
                Transformations (XSLT) Version 1.0 and XML Path Language (XPath) Version 1.0.</li>
            <li><b>Saxon <ph keyref="saxon6FullVersion"/></b> - <xref
          href="http://saxon.sourceforge.net/saxon6.5.5/" scope="external" format="html">Saxon <ph
            keyref="saxon6FullVersion"/></xref> is an XSLT processor that implements the Version 1.0
        XSLT and XPath with a number of powerful extensions. This version of Saxon also includes
        many of the new features that were first defined in the XSLT 1.1 working draft, but for
        conformance and portability reasons these are not available if the stylesheet header
        specifies <codeph>version="1.0"</codeph>.</li>
            <li><b>Saxon <ph keyref="saxon9FullVersion"/> Home Edition (HE), Professional Edition
          (PE)</b> - <xref href="http://saxon.sf.net/" scope="external" format="html">Saxon-HE/PE
        </xref> implements the basic conformance level for XSLT 2.0 / 3.0 and XQuery 1.0. The term
          <i>basic XSLT 2.0 / 3.0 processor</i> is defined in the draft XSLT 2.0 / 3.0
        specifications. It is a conformance level that requires support for all features of the
        language other than those that involve schema processing. The HE product remains open
        source, but removes some of the more advanced features that are present in Saxon-PE.</li>
            <li><b>Saxon <ph keyref="saxon9FullVersion"/> Enterprise Edition (EE)</b> - <xref
          href="http://www.saxonica.com/" scope="external" format="html">Saxon EE</xref> is the
        schema-aware edition of Saxon and it is one of the built-in processors included in <ph
          keyref="product"/>. Saxon EE includes an XML Schema processor, and schema-aware XSLT,
        XQuery, and XPath processors.<p>The validation in schema aware transformations is done
          according to the W3C XML Schema 1.0 or 1.1. This can be <xref
            href="xml-schema-preferences-page.dita">configured in Preferences</xref>.<note><ph
              keyref="product"/> implements a Saxon framework that allows you to create Saxon
            configuration files. Two templates are available: <uicontrol>Saxon collection
              catalog</uicontrol> and <uicontrol>Saxon configuration</uicontrol>. Both of these
            templates support content completion, element annotation, and attribute annotation.
            </note><note>Saxon can use the <term>ICU-J localization library</term>
              (<filepath>saxon9-icu.jar</filepath>) to add support for sorting and date/number
            formatting in a wide variety of languages. This library is not included in the <ph
              keyref="product"/> installation kit. However, Saxon will use the default collation and
            localization support available in the currently used JRE. To enable this capability
            follow these steps:<ol id="ol_a5f_gxq_4q">
              <li>Download Saxon <ph keyref="saxon9FullVersion"/> Professional Edition (PE) or
                Enterprise Edition (EE) from <xref href="http://www.saxonica.com"
                  format="html#download-saxon" scope="external"/>.</li>
              <li>Unpack the downloaded archive.</li>
              <li>Copy the <filepath>saxon9-icu.jar</filepath> file to
                  <filepath>oxygen/lib</filepath> directory.</li>
              <li>Re-start the application.</li>
            </ol></note></p></li>
      <li product="developer editor developerEclipse editorEclipse"><uicontrol>Saxon-CE (Client
          Edition)</uicontrol> is Saxonica's implementation of XSLT 2.0 for use on web browsers. <ph
          keyref="product"/> provides support for editing stylesheets that contain Saxon-CE
        extension functions and instructions. This support improves the validation, content
        completion, and syntax highlighting.<note id="saxon-ce-execution-limitation">Saxon-CE, being
          JavaScript-based, was designed to run inside a web browser. This means that you will use
            <ph keyref="product"/> only for developing the Saxon-CE stylesheet, leaving the
          execution part to a web browser. See more details about <xref
            href="http://www.saxonica.com/ce/index.xml" scope="external" format="html">executing
            such a stylesheet on Saxonica's website</xref>.</note><note>A specific template, named
            <uicontrol>Saxon-CE stylesheet</uicontrol>, is available in the <xref
            href="../tasks/new-dialog-sa.dita#new-dialog-sa" product="developer editor">New Document
            wizard</xref><ph product="developerEclipse editorEclipse">New From Templates
          wizard</ph>.</note></li>
        </ul>
        <p><ph keyref="product"/> also supports the following processors:</p>
        <ul>
            <li><b>Xsltproc (libxslt)</b> - <xref href="http://xmlsoft.org/XSLT/" scope="external"
          format="html">Libxslt</xref> is the XSLT C library developed for the Gnome project.
          <apiname>Libxslt</apiname> is based on <term>libxml2</term>, the XML C library developed
        for the Gnome project. It also implements most of the EXSLT set of processor-portable
        extensions, functions, and some of Saxon's evaluate and expression extensions. The
          <term>libxml2</term> version included in <ph keyref="product"/> is <ph
          keyref="libxml2Version"/> and the <apiname>Libxslt</apiname> version is <ph
          keyref="libxsltVersion"/>.<p><ph keyref="product"/> uses <apiname>Libxslt</apiname>
          through its command line tool (<cmdname>Xsltproc</cmdname>). The XSLT processor is
          included in the distribution kit of the stand-alone version for Windows and Mac OS X.
          Since there are differences between various Linux distributions, on Linux you must install
            <apiname>Libxslt</apiname> on your machine as a separate application and set the PATH
          variable to contain the <apiname>Xsltproc</apiname> executable.</p><p
          product="editorEclipse authorEclipse developerEclipse">If you do not have the
            <apiname>Libxslt</apiname> library already installed, you should copy the following
          files from <ph keyref="product"/> stand-alone installation directory to the root of the
            <filepath>com.oxygenxml.editor_</filepath><ph keyref="minorVersion"/> plugin:</p><ul
          product="editorEclipse authorEclipse developerEclipse">
          <li>on Windows: <filepath>xsltproc.exe</filepath>,
              <filepath>zlib1.dll</filepath>,<filepath>libxslt.dll</filepath>,<filepath>libxml2.dll</filepath>,
              <filepath>libexslt.dll</filepath>,<filepath>iconv.dll</filepath></li>
          <li>on Linux: <filepath>xsltproc</filepath>,<filepath>libexslt.so.0</filepath>,
              <filepath>libxslt.so.1</filepath>,<filepath>libxsml2.so.2</filepath></li>
          <li>on Mac OS X: <filepath>xsltproc.mac</filepath>, <filepath>libexslt</filepath>,
              <filepath>libxslt</filepath>, <filepath>libxml</filepath></li>
        </ul><p>The Xsltproc processor can be configured from the <xref
            href="preferences-xsltproc.dita"><uicontrol>XSLTPROC</uicontrol> options
          page</xref>.</p><note type="caution">Known problem: file paths containing spaces are not
          handled correctly in the LIBXML processor. For example, the built-in XML catalog files of
          the predefined document types (DocBook, TEI, DITA, etc) are not handled properly by LIBXML
          if <ph keyref="product"/> is installed in the default location on Windows (C:\Program
          Files). This is because the built-in XML catalog files are stored in the
            <filepath>[OXYGEN_DIR]/frameworks</filepath> subdirectory of the installation directory,
          which in this case contains at least a space character.</note></li>
            <li><b>MSXML 3.0/4.0</b> - <xref href="http://msdn.microsoft.com/xml/" scope="external"
          format="html">MSXML 3.0/4.0</xref> is available only on Windows 2000, Windows NT, and
        Windows XP platforms. It can be used for <xref
          href="defining-new-transformation-scenario.dita">transformation</xref>
        <ph product="editor editorEclipse developer developerEclipse">and <xref
            href="xslt-custom-validation.dita">validation of XSLT stylesheets</xref></ph>.<p><ph
            keyref="product"/> uses the Microsoft XML parser through its command line tool <xref
            href="http://microsoft.com/en-us/download/details.aspx?id=21714" scope="external"
            format="html"><filepath>msxsl.exe</filepath></xref>.</p><p>Since
            <filepath>msxsl.exe</filepath> is only a wrapper, Microsoft Core XML Services (MSXML)
          must be installed on the computer. Otherwise, you will get a corresponding warning. You
          can get the latest Microsoft XML parser from <xref
            href="http://www.microsoft.com/downloads/details.aspx?FamilyId=3144B72B-B4F2-46DA-B4B6-C5D7485F2B42&amp;displaylang=en"
            scope="external" format="html">Microsoft web-site</xref>. </p></li>
            <li><b>MSXML .NET</b> - <xref href="http://msdn.microsoft.com/xml/" scope="external"
          format="html">MSXML .NET</xref> is available only on Windows NT4, Windows 2000 and Windows
        XP platforms. It can be used for <xref href="defining-new-transformation-scenario.dita"
          >transformation</xref>
        <ph product="editor editorEclipse developer developerEclipse">and <xref
            href="xslt-custom-validation.dita">validation of XSLT stylesheets</xref></ph>.<p><ph
            keyref="product"/> performs XSLT transformations and validations using .NET Framework's
          XSLT implementation (<apiname>System.Xml.Xsl.XslTransform</apiname> class) through the
            <b>nxslt</b> command line utility. The <b>nxslt</b> version included in <ph
            keyref="product"/> is <ph keyref="nxsltVersion"/>. </p><p>You should have the .NET
          Framework version 1.0 already installed on your system. Otherwise, you will get the
          following warning: <msgph>MSXML.NET requires .NET Framework version 1.0 to be installed.
            Exit code: 128</msgph>.</p><p>You can get the .NET Framework version 1.0 from the <xref
            href="http://www.microsoft.com/downloads/details.aspx?FamilyID=d7158dee-a83f-4e21-b05a-009d06457787&amp;displaylang=en"
            scope="external" format="html"> Microsoft website</xref>.</p></li>
            <li><b>.NET 1.0</b> - A transformer based on the <apiname>System.Xml</apiname> 1.0
        library available in the .NET 1.0 and .NET 1.1 frameworks from Microsoft (<xref
          href="http://msdn.microsoft.com/xml/" scope="external" format="html"
          >http://msdn.microsoft.com/xml/</xref>). It is available only on Windows.<p>You should
          have the .NET Framework version 1.0 or 1.1 already installed on your system. Otherwise,
          you will get the following warning: <msgph>MSXML.NET requires .NET Framework version 1.0
            to be installed. Exit code: 128</msgph>.</p><p>You can get the .NET Framework version
          1.0 from the <xref
            href="http://www.microsoft.com/downloads/details.aspx?FamilyID=d7158dee-a83f-4e21-b05a-009d06457787&amp;displaylang=en"
            scope="external" format="html">Microsoft website</xref>.</p></li>
            <li><b>.NET 2.0</b> - A transformer based on the <apiname>System.Xml</apiname> 2.0
        library available in the .NET 2.0 framework from <xref href="http://msdn.microsoft.com/xml/"
          scope="external" format="html">Microsoft</xref>. It is available only on Windows.<p>You
          should have the .NET Framework version 2.0 already installed on your system. Otherwise,
          you will get the following warning: <msgph>MSXML.NET requires .NET Framework version 2.0
            to be installed. Exit code: 128</msgph>.</p><p>You can get the .NET Framework version
          2.0 from the <xref
            href="http://www.microsoft.com/downloads/details.aspx?FamilyID=9655156b-356b-4a2c-857c-e62f50ae9a55&amp;DisplayLang=en"
            scope="external" format="html">Microsoft website</xref>.</p></li>
        </ul>
        <p product="editor author developer">The <uicontrol>Transformation options </uicontrol>
      button <image href="../img/bt_options_shortcut.png" id="image_usj_k2s_4q"/>, available on the
        <uicontrol>Transformation</uicontrol> toolbar, allows for quick access to the <xref
        href="preferences-xslt.dita">XSLT options</xref> in the <ph keyref="product"/> user
      preferences.</p>
    </body>
</topic>
