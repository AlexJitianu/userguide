<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="tagless-editor-introduction">
  <title>Tagless XML Authoring</title>
  <!--Proofed-->
  <prolog>
    <metadata>
      <keywords><indexterm>Author Editor<indexterm>WYSIWYG editing</indexterm></indexterm><indexterm>Author Editing Mode<indexterm>roles: content author, framework
          developer</indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <body>
    <p>Once the structure of an XML document and the required restrictions on its elements and their
      attributes are defined with an XML schema, the editing of the document becomes easier in a
      WYSIWYG-style editor in which the XML markup is not visible.</p>
    <p>This type of tagless editor is available in <ph keyref="product"/> as the
        <uicontrol>Author</uicontrol> mode. To enter this mode, click the
        <uicontrol>Author</uicontrol> button at the bottom of the editing area. The
        <uicontrol>Author</uicontrol> mode renders the content of the XML document visually, based
      on a CSS stylesheet associated with the document. Many of the actions and features available
      in <uicontrol>Text</uicontrol> mode are also available in <uicontrol>Author</uicontrol>
      mode.</p>
    <p>
      <fig product="editor author">
        <title>Author Editing Mode</title>
        <image href="../img/sa_author_perspective_large.png" id="image_wqm_snj_mg"/>
      </fig>
      <fig product="editorEclipse authorEclipse">
        <title>Author Editing Mode</title>
        <image href="../img/ec_author_frame.png" id="image_urm_snj_mg"/>
      </fig>
    </p>
    <section id="associating-css-stylesheet">
      <title>Associating a Stylesheet with an XML Document</title>
      <p>The tagless rendering of an XML document in the <uicontrol>Author</uicontrol> mode is
        driven by a CSS stylesheet which conforms to the <xref href="http://www.w3.org/TR/CSS21/"
          scope="external" format="html">version 2.1 of the CSS specification</xref> from the W3C
        consortium. Some CSS 3 features, such as namespaces and custom extensions, of the CSS
        specification are also supported. <ph keyref="product"/> also supports stylesheets coded
        with the LESS dynamic stylesheet language.</p>
      <p>There are several methods for associating a stylesheet (CSS or LESS) with an XML
          document:<ol id="ol_b5t_bjj_lq">
          <li>Insert the <codeph>xml-stylesheet</codeph> processing instruction with the
              <codeph>type</codeph> attribute at the beginning of the XML document. If you do not
            want to alter your XML documents, <xref
              href="dg-author-settings.dita#dg-author-settings">you should set-up a <i>document
                type</i></xref>.<p>CSS
              example:<codeblock outputclass="language-xml">&lt;?xml-stylesheet type="text/css" href="test.css"?></codeblock></p><p>LESS
              example:<codeblock outputclass="language-xml">&lt;?xml-stylesheet type="text/css" href="test.less"?> </codeblock></p><note>
              XHTML documents need a <codeph>link</codeph> element, with the <codeph>href</codeph>
              and <codeph>type</codeph> attributes in the <codeph>head</codeph> child element, as
              specified in the <xref
                href="http://www.w3.org/TR/REC-html40/present/styles.html#h-14.3.2" scope="external"
                format="html">W3C CSS specification</xref>. XHTML
              example:<codeblock outputclass="language-xml">&lt;link href="/style/screen.css" rel="stylesheet" type="text/css"/></codeblock></note></li>
          <li>Configure a <i>Document Type Association</i> by adding a new CSS or LESS file in the
            settings. To do so, <ph conkeyref="reusable.menus/open-the-preferences-page"/> and go to <menucascade>
              <uicontrol>Document Type Association</uicontrol>
            </menucascade>. Edit the appropriate framework, open the <uicontrol>Author</uicontrol>
            tab, then the <uicontrol>CSS</uicontrol> tab. Press the <uicontrol><image
                href="../img/Add16.png" id="image_ngw_f54_lq"/>New</uicontrol> button to add a new
            CSS or LESS file.<note>The Document Type Associations are read-only, so you need to
              extend an existing one.</note></li>
        </ol></p>
    </section>
    <section>
      <title>Selecting and Combining Multiple CSS Styles</title>
      <p
        conref="../references/selecting-combining-multiple-css-styles.dita#selecting-combining-multiple-css-styles/css.styles.intro"/>
      <p
        conref="../references/selecting-combining-multiple-css-styles.dita#selecting-combining-multiple-css-styles/css.styles.example"/>
      <fig
        conref="../references/selecting-combining-multiple-css-styles.dita#selecting-combining-multiple-css-styles/css.styles.image"
        id="fig_pwv_gnr_qr"/>
    </section>
    <section>
      <title>Author Mode User Roles</title>
      <p>There are two main types of users of the <uicontrol>Author</uicontrol> mode: <i>framework
          developers</i> and <i>content authors</i>. A <i>framework developer</i> is a technical
        person with advanced XML knowledge who defines the framework for authoring XML documents in
        the tagless editor. Once the framework is created or edited by the developer, it is
        distributed as a deliverable component ready to plug into the application for the content
        authors. A <i>content author</i> does not need to have advanced knowledge about XML tags,
        operations such as validation of XML documents, or applying an XPath expression to an XML
        document. The <i>content author</i> just uses the framework set-up by the developer in the
        application and starts editing the content of XML documents without editing the XML tags
        directly.</p>
      <p>The framework set-up by the developer is also called <i>document type association</i> and
        defines a type of XML document by specifying all the details needed for editing the content
        of XML documents in tagless mode. </p>
      <p>The framework details that are created and customized by the developer include: </p>
      <ul id="ul_qsb_q4j_mg">
        <li>the CSS stylesheet that drives the tagless visual rendering of the document</li>
        <li>the rules for associating an XML schema with the document, which is needed for content
          completion and validation of the document</li>
        <li>transformation scenarios for the document</li>
        <li>XML catalogs</li>
        <li>custom actions available as buttons on the toolbar</li>
      </ul>
      <p>The tagless editor comes with some ready-to-use predefined document types for XML
        frameworks such as DocBook, DITA, TEI, and XHTML.</p>
    </section>
    <p>To watch our video demonstration about the basic functionality of the
        <uicontrol>Author</uicontrol> mode, go to <xref
        href="http://oxygenxml.com/demo/WYSIWYG_XML_Editing.html" format="html" scope="external"
      />.</p>
  </body>
</topic>
