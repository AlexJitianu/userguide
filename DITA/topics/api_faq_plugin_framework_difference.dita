<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_cby_r5k_5h">
  <title>Difference Between a Document Type (Framework) and a Plugin Extension</title>
  <body>
    <section>
      <title>Question</title>
      <p>What is the difference between a Document Type (Framework) and a Plugin Extension?</p>
    </section>
    <section>
      <title>Answer</title>
      <p>Two ways of customising the application are possible:</p>
      <ol id="ol_wbj_dzk_5h">
        <li>Implementing a plugin.<p>A plugin serves a general purpose and influences any type of
            XML file that you open in <ph keyref="product"/>.</p><p>For the <ph keyref="product"
            />Plugins API, Javadoc, samples, and documentation, go to <xref
              href="http://www.oxygenxml.com/oxygen_sdk.html#Developer_Plugins" format="html"
              scope="external">http://www.oxygenxml.com/oxygen_sdk.html#Developer_Plugins</xref>
          </p></li>
        <li>Creating or modifying the document type which is associated to your specific XML
            vocabulary.<p>This document type is used to provide custom actions for your type of XML
            files and to mount them on the toolbar, menus, and contextual menus.</p><p>For example,
            if the application end users are editing DITA, all the toolbar actions which are
            specific for DITA are provided by the DITA Document Type. If you look in the <ph
              keyref="product"/> Preferences-&gt;"Document Type Association" there is a "DITA"
            document type.</p><p>If you <xref href="dg-author-settings.dita#dg-author-settings">edit
              that document type</xref> in <ph keyref="product"/> you will see that it has an
              <codeph>Author</codeph> tab in which it defines all custom DITA actions and adds them
            to the toolbars, main menus, contextual menus.</p><p>We have a special chapter in our
            user manual which explains how such document types are constructed and
              modified:</p><p><xref
              href="http://www.oxygenxml.com/doc/ug-oxygen/index.html?q=/doc/ug-oxygen/topics/author-devel-guide-intro.html"
              format="html" scope="external"
              >http://www.oxygenxml.com/doc/ug-oxygen/index.html?q=/doc/ug-oxygen/topics/author-devel-guide-intro.html</xref></p><p>If
            you look on disk in the:</p><p>
            <codeblock>[OXYGEN_DIR]\frameworks\dita</codeblock>
          </p><p>folder there is a file called <filepath>dita.framework</filepath>. That file gets
            updated when you edit a document type from the <ph keyref="product"/> Preferences. Then
            you can share that updated file with all users.</p><p>The same folder contains some JAR
            libraries. These libraries contain custom complex Java operations which are called when
            the user presses certain toolbar actions.</p><p>If you want to add a custom action this
            topic explains how:</p><p><xref
              href="http://www.oxygenxml.com/doc/ug-oxygen/index.html?q=/doc/ug-oxygen/tasks/addCustomActionHowTo.html"
              format="html" scope="external"
              >http://www.oxygenxml.com/doc/ug-oxygen/index.html?q=/doc/ug-oxygen/tasks/addCustomActionHowTo.html</xref></p><p>We
            have an Oxygen SDK which
            <?oxy_comment_start author="Mark" timestamp="20140813T161531-0400" comment="The only SDK download I could find was oxygen-sdk-16.0.0-all.zip which only contains .jar files, none of which have DITA in the name. I have not tried to do the maven setup (I don&apos;t know maven). But it does not seem like this stuff is in there."?>contains
            the Java sources from all the DITA Java customizations:<?oxy_comment_end?></p><p><xref
              href="http://www.oxygenxml.com/oxygen_sdk.html#XML_Editor_Authoring_SDK" format="html"
              scope="external"
              >http://www.oxygenxml.com/oxygen_sdk.html#XML_Editor_Authoring_SDK</xref>
          </p></li>
      </ol>
    </section>
    <note product="author editor" type="important">It is possible for a plugin to share the same
      classes with a framework. For further details, go to <xref
        href="../topics/share-classloader-between-framework-and-plugin.dita#share-classloader-between-framework-and-plugin"
        >How to Share the Classloader Between a Framework and a Plugin</xref>.</note>
  </body>
</topic>
