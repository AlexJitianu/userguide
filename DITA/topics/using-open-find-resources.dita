<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="using-open-find-resources">
  <title>Searching in Content</title>
  <body>
    <p>To perform a search through the content of your resources, open the <uicontrol>Open/Find
        Resources</uicontrol> dialog or the <uicontrol>Open/Find Resource</uicontrol> view, enable
      the <uicontrol>in content</uicontrol> option, and in the search field enter the terms that you
      want to search for.</p>
    <p>The <uicontrol>Open/Find Resource</uicontrol> feature is powered by <xref
        href="http://lucene.apache.org/core/" format="html" scope="external">Apache Lucene</xref>.
      Apache Lucene is a free open source information retrieval software library.</p>
    <p>You can use the <uicontrol>Open/Find Resource</uicontrol> dialog and the
        <uicontrol>Open/Find Resource</uicontrol> view either to perform a simple text search or to
      perform a more complex search using the <xref
        href="http://lucene.apache.org/core/old_versioned_docs/versions/2_9_1/queryparsersyntax.html"
        format="html" scope="external">Apache Lucene - Query Parser Syntax</xref>. Using the <xref
        href="http://lucene.apache.org/core/old_versioned_docs/versions/2_9_1/queryparsersyntax.html"
        format="html" scope="external">Apache Lucene - Query Parser Syntax</xref> means you can
      perform any of the following searches:</p>
    <example>
      <title>Term Searches</title>
      <p>Use the <uicontrol>Open/Find Resource</uicontrol> view or dialog to search for plain
        text:<codeblock>Garden Preparation</codeblock></p>
    </example>
    <example>
      <title>Element Specific Searches</title>
      <p>Use the <uicontrol>Open/Find Resource</uicontrol> view or dialog to search for content
        that belongs to a specific element:<codeblock>title:"Garden Preparation"</codeblock></p>
    </example>
    <example>
      <title>Wildcard Searches</title>
      <p>Use wildcards to make your search more
        permissive:<codeblock>Garden Prepar?tion</codeblock></p>
    </example>
    <example>
      <title>Fuzzy Searches</title>
      <p>In case you are not sure what is the exact form of a term that you are interested in, use
        the fuzzy search to find the terms that are similar to what you introduce in the
          <uicontrol>Open/Find Resource</uicontrol> view or dialog. To perform a fuzzy search, use
        the <codeph>~</codeph> symbol after the word that you are not sure
        of:<codeblock>Garden Preparing~</codeblock></p>
    </example>
    <example>
      <title>Proximity Searches</title>
      <p>Use proximity searches to find words that are within a specific distance away. To perform a
        proximity search, use the <codeph>~</codeph> symbol at the end of  your search. For example,
        to search for the word <term>Garden</term> and the word <term>Preparation</term> within 6
        words of each other use:<codeblock>"Garden Preparation"~6</codeblock></p>
    </example>
    <example>
      <title>Range Searches</title>
      <p>Use range searches to match documents whose element values are  between the lower and upper
        bound specified in the range query. For example, to find all documents whose titles are
        between <term>Iris</term> and <term>Lilac</term>, use:</p>
      <p>
        <codeblock>title:{Iris TO Lilac}</codeblock>
      </p>
      <p>The curly brackets denote an exclusive query. The results you get when using this query are
        all the documents whose titles are between <term>Iris</term> and <term>Lilac</term>, but not
        including <term>Iris</term> and <term>Lilac</term>. To create an inclusive query use square
        brackets:<codeblock>title:[Iris to Lilac]</codeblock></p>
    </example>
    <example>
      <title>Term Prioritising Searches</title>
      <p>Use term prioritising searches in case the fragment of text that you are searching for
        contains certain words that are more important to your search than the rest of them. For
        example, if you are searching for <term>Autumn Flowers</term>, a good idea is to prioritise
        the word <term>Autumn</term> since the word <term>Flowers</term> occurs more often. To
        prioritise a word use the <codeph>^</codeph>
        symbol:<codeblock>Autumn^6 Flowers</codeblock></p>
    </example>
    <example>
      <title>Searches Using Boolean Operators</title>
      <p>You are able to use the <uicontrol>AND</uicontrol>, <uicontrol>+</uicontrol>,
          <uicontrol>OR</uicontrol>, <uicontrol>-</uicontrol>, and <uicontrol>NOT</uicontrol>
        operators. </p>
      <p>To search for documents that contain both the words <term>Garden</term> and
          <term>Preparation</term>, use:<codeblock>Garden AND Preparation</codeblock></p>
      <p>To search for documents that must contain the word <term>Garden</term> and may contain the
        word <term>Preparation</term>, use:<codeblock>+Garden Preparation</codeblock></p>
      <p>To search for documents that contain either the word <term>Garden</term> or the word
          <term>Preparation</term>, use:<codeblock>Garden OR Preparation</codeblock></p>
      <p>To search for documents that contain <term>Garden Preparation</term> but not
          <term>Preparation of the Flowers</term>,
        use:<codeblock>"Garden Preparation" - "Preparation of the Flowers"</codeblock></p>
    </example>
    <example>
      <title>Searches Using Grouping</title>
      <p>To search either for the word <term>Garden</term> or <term>Preparation</term>, and the word
          <term>Flowers</term>, use:<codeblock>(Garden OR Preparation) AND Flowers</codeblock></p>
    </example>
    <example>
      <title>Searches Using Element Grouping</title>
      <p>To search for a title that contains both the word <term>Flowers</term> and the phrase
          <term>Garden Preparation</term>,
        use:<codeblock>title:(+Flowers +"Garden Preparation")</codeblock></p>
    </example>
  </body>
</topic>
