<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="xml-schema-preferences-page">
  <title>XML Schema Preferences</title>
  <body>
    <p>To configure the <uicontrol>XML Schema</uicontrol> options, <ph
        conkeyref="reusable.menus/open-the-preferences-page"/> and go to  <menucascade>
        <uicontrol>XML</uicontrol>
        <uicontrol>XML Parser</uicontrol>
        <uicontrol> XML Schema</uicontrol>
      </menucascade>.</p>
    <p>This preferences page allows you to configure the following options:</p>
    <section>
      <ul>
        <li>
          <uicontrol>Default XML Schema version</uicontrol> - Allows you to select the version of
          W3C XML Schema: XML Schema 1.0 or XML Schema 1.1;<note>You are also able to set the XML
            Schema version using the <uicontrol>Customize</uicontrol> option in<xref
              keyref="wizard.new-document">
              <uicontrol>New</uicontrol> dialog box</xref>.</note>
        </li>
        <li>
          <uicontrol>Default XML Schema validation engine</uicontrol> - Allows you to set the
          default XML Schema validation engine either to Xerces, or to Saxon EE; </li>
      </ul>
      <title>Xerces validation features</title>
      <ul>
        <li>
          <uicontrol>Enable full schema constraint checking
              (http://apache.org/xml/features/validation/schema-full-checking)</uicontrol> - Sets the <i>schema-full-checking</i> feature to true. This enables a validation of the
            parsed XML document against a schema (W3C XML Schema or DTD) while the document is
            parsed;
        </li>
        <li>
          <uicontrol>Enable honour all schema location feature
              (http://apache.org/xml/features/honour-all-schema-location)</uicontrol> - Sets the <i>honour-all-schema-location</i> feature to true. All the files that declare
            W3C XML Schema components from the same namespace are used to compose the validation
            model. In case this option is disabled, only the first W3C XML Schema file that is
            encountered in the XML Schema import tree is taken into account;
        </li>
        <li>
          <uicontrol>Enable full XPath 2.0 in assertions and alternative types (
            http://apache.org/xml/features/validation/cta-full-xpath-checking )</uicontrol> - When
          selected, you can use the full XPath support in assertions and alternative types.
          Otherwise, there is available only the XPath support offered by the Xerces engine.</li>
        <li>
          <uicontrol>Assertions can see comments and processing instructions (
            http://apache.org/xml/features/validation/assert-comments-and-pi-checking )</uicontrol>
          - Controls whether comments and processing instructions are visible to the XPath
          expression used for defining an assertion in XSD 1.1; </li>
      </ul>
    </section>
    <section>
      <title>Saxon validation features</title>
      <ul>
        <li>
          <uicontrol>Multiple schema imports</uicontrol> - Forces xs:import to fetch the referenced schema document. By default, the xs:import
            fetches the document only if no schema document for the given namespace has already been
            loaded. With this option in effect, the referenced schema document is loaded unless the
            absolute URI is the same as a schema document already loaded;
        </li>
        <li>
          <uicontrol>Assertions can see comments and processing instructions</uicontrol> - Controls
          whether comments and processing instructions are visible to the XPath expression used to
          define an assertion. By default (unlike Saxon 9.3), they are not made visible. </li>
      </ul>
    </section>
  </body>
</topic>
