<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="how_to_cms_auth">
  <title>How To Make <ph keyref="webappComponent"/> Use the CMS Authentication Mechanism</title>
  <body>
    <p>This topic covers the case when you want to impose an authentication step to all users who
      want to edit documents in <ph keyref="webappComponent"/>. This is usually required when the CMS needs
      authentication before granting access to a file.</p>
    <p><ph keyref="webappComponent"/> provides both server-side and client-side API that allows you to
      implement such a mechanism. The following is a list of the basic building blocks of the
      authentication mechanism:<ol id="ul_ucx_slc_cr">
        <li>Develop a plugin that implements the <xref
            href="http://archives.oxygenxml.com/Oxygen/Editor/InstData17.0/SDK/javadoc/ro/sync/exml/plugin/urlstreamhandler/URLStreamHandlerPluginExtension.html"
            format="html" scope="external"
              ><apiname>ro.sync.exml.plugin.urlstreamhandler.URLStreamHandlerPluginExtension</apiname></xref>
          interface. Considering the multiple user context of the <ph keyref="webappComponent"/>, the
            <codeph>getURLStreamHandler</codeph> method should return an instance of the <xref
            href="http://archives.oxygenxml.com/Oxygen/Editor/InstData17.0/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/URLStreamHandlerWithContext.html"
            format="html" scope="external"
              ><codeph>ro.sync.ecss.extensions.api.webapp.plugin.URLStreamHandlerWithContext</codeph></xref>
          class. This class tracks the user on behalf of which the URL connection will be made.</li>
        <li>If the CMS rejects the connection attempt with a message that the user is not
          authenticated, you should throw a <xref
            href="http://archives.oxygenxml.com/Oxygen/Editor/InstData17.0/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/UserActionRequiredException.html"
            format="html" scope="external"
              ><codeph>ro.sync.ecss.extensions.api.webapp.plugin.UserActionRequiredException</codeph></xref>
          exception. This exception is automatically relayed to the client-side as a <xref
            href="http://www.oxygenxml.com/maven/com/oxygenxml/oxygen-webapp/17.0.0/jsdoc/sync.api.WebappMessage.html"
            format="html" scope="external"><codeph>sync.api.WebappMessage</codeph></xref> JavaScript
          object.</li>
        <li>On the client side:<ul id="ul_gxr_n4c_cr">
            <li>Use the <xref
                href="http://www.oxygenxml.com/maven/com/oxygenxml/oxygen-webapp/17.0.0/jsdoc/sync.api.Editor.html"
                format="html" scope="external"
                  ><codeph>sync.api.Editor.EventTypes.CUSTOM_MESSAGE_RECEIVED</codeph></xref> event
              to intercept the messages sent from the server-side.</li>
            <li>Display a dialog box to collect more authentication information from the user.</li>
            <li>Send the credentials to the server, more specifically to the <xref
                href="http://archives.oxygenxml.com/Oxygen/Editor/InstData17.0/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/URLStreamHandlerWithContext.html"
                format="html" scope="external"
                  ><codeph>ro.sync.ecss.extensions.api.webapp.plugin.URLStreamHandlerWithContext</codeph></xref>
              instance defined at step 1. For this part, you will need to implement a secure way to
              transmit the credentials. This can range from a simple servlet that runs in the <ph
                keyref="webappComponent"/> to an <term>OAuth</term> implementation.</li>
            <li>Retry the operation that triggered the authentication procedure.</li>
          </ul></li>
      </ol></p>
  </body>
</topic>
