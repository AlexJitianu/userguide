<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webhelp_responsive_customization">
  <title>WebHelp Responsive Customization Methods</title>
    <body>
    <p>There are several methods that you can use to customize the WebHelp Responsive output. Each
      method allows you to make a number of customizations and each method has his own limitations.
      So, you can choose a method depending on your needs.</p>
    <section id="section_kqn_g5l_qv">
      <title>Use one of the Predefined Placeholders to Insert Custom HTML Fragments</title>
      <p>The WebHelp Responsive template contains a series of component placeholders. Some of these
        placeholders are left empty in the default output configurations, but you can use them to
        display custom content. You can use this method when you like an existing skin, but you need
        to change a bit the generated output.</p>
      <p>The predefined empty
        <?oxy_comment_start author="bogdan" timestamp="20160415T105757+0300" comment="Schematic with the location of the empty placeholders."?>placeholders <?oxy_comment_end?>are:<ul>
          <li/>
        </ul></p>
      <p>Each such placeholder has an associated parameter in the
        <?oxy_comment_start author="bogdan" timestamp="20160415T105944+0300" comment="Link to the Parameters tab"?>transformation
        scenario <uicontrol>Parameters</uicontrol> tab<?oxy_comment_end?>. As a means of rapid
        identification, all these parameters have the name prefix
        <codeph>webhelp.fragment</codeph>.</p>
      <p>For example, to insert a message above the search text field in the main page of the
        output, follow this procedure:</p>
      <ol>
        <li>Edit the <term>WebHelp Responsive</term> transformation scenario.</li>
        <li>Go to <uicontrol>Parameters</uicontrol> tab and find the parameter associated with the
          place holder that you want to use. In our case, it is called
            <codeph>webhelp.fragment.welcome</codeph>.</li>
        <li>Edit the parameter. Depending on the size of the content you want to add you can insert
          one of the following:<ul>
            <li>a small well-formed XHTML fragment, such as: <codeph>&lt;i>Welcome to our user
                guide&lt;/i></codeph>.</li>
            <li>path to a file that contains well-formed XHTML content.</li>
          </ul></li>
      </ol>
    </section>
    <section id="customizing_webhelp_output_with_a_custom_css">
      <title>Customizing WebHelp Output with a Custom CSS</title>
      <p>You can use this method when you like an existing skin, and it is very close to what you
        need, so it is the perfect candidate for customization. This might be the case when you want
        change a color, or you want to adjust a little bit some of the margins or paddings of
        certain components.</p>
      <p>Advantages of this method include:</p>
      <p>
        <ul>
          <li>The custom CSS can be distributed with the project you are working on and shared with
            other members of your team.</li>
          <li>Easy to setup. (???)</li>
        </ul>
      </p>
      <p>Disadvantages</p>
      <p>
        <ul>
          <li>The fonts, images and other resources must be stored in a remote server location.</li>
          <li>The customization does not appear in the <codeph>Templates</codeph> tab of the
            transformation scenario. Instead it needs to be set as a parameter of an existing
            transformation scenario.</li>
        </ul>
      </p>
      <p>To set a custom CSS to a transformation scenario:</p>
      <ul id="ul_ux5_4pl_qv">
        <li>Edit the <term>WebHelp Responsive</term> transformation scenario.</li>
        <li>Open the <uicontrol>Parameters</uicontrol> tab.</li>
        <li><ph
            conref="../reusables/topics/reusable-webhelp-customizing.dita#reusable-webhelp-customizing/DITA-parameters-ph"
          /></li>
      </ul>
    </section>
    <section id="section_xmn_wpl_qv"><title>Create a WebHelp Responsive Skin</title>This method is
      useful when you need some design that is not similar to any of the WebHelp Responsive
      predefined skins, or you want to heavily change one of the skins. Also this method is useful
      when you want to distribute additional resources (such as fonts and images) together with the
        CSS.<p>Advantages of this method include:</p><p>
        <ul id="ul_ttt_qrl_qv">
          <li>The resources are encapsulated into the <filepath>skin</filepath> directory, together
            with the CSS file.</li>
          <li>The customized skin is available in the <uicontrol>Templates</uicontrol> tab of the
            transformation scenario dialog.</li>
        </ul>
      </p><p>Note that this method requires access to the installation folder, or the use of an
        external <term>DITA-OT</term> engine, with the WebHelp plugin installed.</p><p>To create a
        WebHelp Responsive skin, follow this procedure:<ol>
          <li>Locate the DITA-OT you are using. (Look into
            <?oxy_comment_start author="bogdan" timestamp="20160415T124223+0300" comment="LInk to preference page"?>the
            preference<?oxy_comment_end?>s for "DITA"). For instance, if you are using DITA-OT 2.X,
            look into the
            folder:<codeblock>{oXygenInstallDir}/frameworks/dita/DITA-OT2.x/plugins/com.oxygenxml.webhelp/templates/dita/bootstrap/variants/</codeblock></li>
          <li>Here you can see some subdirectories, corresponding to different variants of the same
            template. For instance, the default ones are <filepath>tiles</filepath> and
              <filepath>tree</filepath>.</li>
          <li>In either of these variants, you will find a directory with a collection of skins,
            each of them in their own folder. </li>
          <li>Copy the skin folder, then edit the <codeph>skin.css</codeph> file to customize it the
            way you want. If your customization of the CSS file requires additional resources (such
            as images, fonts, or other CSS files), they need to be placed in the
              <filepath>resources</filepath> folder at the same level with the
              <filepath>skin.css</filepath> file.</li>
        </ol></p><note type="tip">During development you regularly need to test your customization.
        To shorten the publishing time of your test, use a small project (you could use one of the
          <ph keyref="product"/> sample projects). Also, you can use your web browser CSS inspector
        tool to lookup the CSS classes you want to modify.</note></section>
    <section id="section_zjl_5sl_qv"><title>Create a New WebHelp Responsive Template</title>This
      method can be used when you need to make significant structural changes to the WebHelp output,
      for instance moving some components to other positions, or to use a different front-end
      library than the default <term>Bootstrap</term> (for instance, switch to <term>ZURB
        Foundation</term>).<p>The advantages of such a method include the possibility of fully
        customizing the output, changing the structure of the generated HTML files, and creating
        multiple skins for the new template.</p><p>Note that this method requires access to the
        installation folder, or to use of an external DITA-OT, with the WebHelp plugin
        installed.</p><p>To create a new WebHelp Responsive template, follow these steps:<ol>
          <li>Locate the DITA-OT you are using. (Look into the preferences for "DITA"). For instance
            if you are using DITA-OT 2.X, look into the folder: <p>
              <codeblock>{oXygenInstallDir}/frameworks/dita/DITA-OT2.x/plugins/com.oxygenxml.webhelp/templates/dita/</codeblock>
            </p></li>
          <li>Duplicate the <filepath>bootstrap</filepath> folder under a different name (for the
            scope of this example, we'll call it <filepath>myTemplate</filepath>). Since we want to
            use this as a starting point, we will keep only one of the skins. Open the
              <filepath>myTemplate/variants</filepath> folder and delete all of its subdirectories,
            except for one (for example, suppose that we decided to keep the
              <filepath>tiles</filepath> folder).</li>
          <li>Open the  <filepath>myTemplate/variants/tiles</filepath> folder and delete all of its
            subdirectory skins, except for one (for example, suppose that we decided to keep the
              <filepath>light</filepath> skin).</li>
          <li>Open the <filepath>myTemplate/variants/tiles/light</filepath> folder and modify the
              <filepath>skin.css</filepath> file to suit your needs. If your customization of the
            CSS file requires additional resources (such as images, fonts, or other CSS files), they
            need to be placed in the <filepath>resources</filepath> folder at the same level with
            the <filepath>skin.css</filepath> file.</li>
        </ol><note type="tip">During development you regularly need to test your customization. To
          shorten the publishing time of your test, use a small project (you could use one of the
            <ph keyref="product"/> sample projects). Also, you can use your web browser CSS
          inspector tool to lookup the CSS classes you want to modify.</note></p></section>
  </body>
</topic>
