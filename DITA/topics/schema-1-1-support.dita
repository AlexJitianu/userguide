<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="schema-1-1-support">
  <title>XML Schema 1.1</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Editing XML Schemas <indexterm>XML Schema 1.1</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> offers full support for XML Schema 1.1, including:<ul>
        <li>XML Documents Validation and Content Completion Based on XML Schema 1.1.</li>
        <li>XML Schema 1.1 Validation and Content Completion.</li>
        <li>Editing XML Schema 1.1 files in the Schema Design mode.</li>
        <li>The Flatten Schema action.</li>
        <li>Resource Hierarchy/Dependencies and Refactoring Actions.</li>
        <li>Master Files.</li>
        <li>Generating Documentation for XML Schema 1.1.</li>
        <li>Support for generating XML instances based on XML Schema.</li>
      </ul></p>
    <p> XML Schema 1.1 is a superset of XML Schema 1.0, that offers lots of new powerful
      capabilities.</p>
    <fig>
      <title>XML Schema 1.1</title>
      <image href="../img/Schema11.png"/>
    </fig>
    <p>The significant new features in XSD 1.1 are:<ul>
        <li><b>Assertions</b> - support to define assertions against the document content using
          XPath 2.0 expressions (an idea borrowed from Schematron).</li>
        <li><b>Conditional type assignment</b> - the ability to select the type against which an
          element is validated based on the values of the attribute of the element.</li>
        <li><b>Open content</b> - content models are able to use the <codeph>openContent</codeph>
          element to specify content models with <term>open content</term>. These content models
          allow elements not explicitly mentioned in the content model to appear in the document
          instance. It is as if wildcards were automatically inserted at appropriate points within
          the content model. A schema document wide default may be set, which causes all content
          models to be open unless specified otherwise. </li>
      </ul></p>
    <p>To see the complete list with changes since version 1.0, go to <xref
        href="http://www.w3.org/TR/xmlschema11-1/#ch_specs" format="html" scope="external"/>.</p>
    <p>XML Schema 1.1 is intended to be mostly compatible with XML Schema 1.0 and to have
      approximately the same scope. It also addresses bug fixes and brings improvements that are
      consistent with the constraints on scope and compatibility.<note type="note">An XML document
        conforming to a 1.0 schema can be validated using a 1.1 validator, but an XML document
        conforming to a 1.1 schema may not validate using a 1.0 validator.</note>If you are
      constrained to use XML Schema 1.0 (for example if you develop schemas for a server that uses
      an XML Schema 1.0 validator which cannot be updated), change the default XML Schema version to
      1.0. If you keep the default XML Schema version set to 1.1, the content completion window
      presents XML Schema 1.1 elements that you can insert accidentally in an 1.0 XML Schema. So
      even if you make a document invalid conforming with XML Schema 1.0, the validation process
      does not signal any issues.</p>
    <p>To change the default XML Schema version, <ph
        conkeyref="reusables-preferences-pages/open-the-preferences-page"/> and go to   <menucascade>
        <uicontrol> XML</uicontrol>
        <uicontrol> XML Parser</uicontrol>
        <uicontrol> XML Schema</uicontrol>
      </menucascade>.</p>
    <p>To watch our video demonstration about the XML Schema 1.1 support, go to <xref
        href="http://oxygenxml.com/demo/XML_Schema_11.html" format="html" scope="external"/>.</p>
  </body>
  <related-links>
    <link href="set-xml-schema-version.dita#set-xml-schema-version"/>
  </related-links>
</topic>
