<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="custom-refactoring-xquery-script">
  <title>Custom Refactoring XQuery Update Script</title>
  <body>
    <p>The first step in creating a custom refactoring operation is to create an XQuery Update
      script. The easiest way to create this file is to use the <b>New</b> document wizard and
      create a new <b>XQuery</b> file.</p>
    <?oxy_insert_start author="radu_pisoi" timestamp="20150317T113804+0200"?>
    <p><?oxy_insert_end?>There are cases when it is necessary to add parameters in the XQuery
      script. For instance, if you want to rename an element you may want to declare an external
      parameter associated with the name of the element to rename. To allow you to specify the value
      for these parameters, they need to be declared in <xref
        href="xml-refactoring-operation-descriptor.dita">the refactoring operation descriptor
        file</xref> that is associated with this operation.</p>
    <note>The XQuery Update processing is disabled by default in <ph keyref="product"/>. Thus, if
      you want to create or edit an XQuery Update script you have to enable this facility by
      creating an <xref href="xquery-transformation.dita">XQuery transformation scenario</xref> and
      choose the <uicontrol>Saxon EE</uicontrol> as the transformation engine. Also, you need to
      enable the <uicontrol>Enable XQuery update</uicontrol> option in the <xref
        href="transform-xquery-advanced-saxon-options.dita">Saxon processor advanced
      options</xref>.</note>
    <p>To demonstrate creating a custom operation, consider that we have a task where we need to
      convert an attribute into an element and insert it inside another element. A specific use-case
      would be if you have a project with a variety of <codeph>image</codeph> elements where a
      deprecated <codeph>alt</codeph> attribute was used for the description and you want to convert
      all instances of that attribute into an element with the same name and insert it as the first
      child of the <codeph>image</codeph> element. </p>
    <p>To achieve this, the XQuery Update script iterates over all elements from the document that
      have the specified local name and namespace. Then it finds the attribute that will be
      converted to an element. It then computes the <term>QName</term> of the new element to be
      inserted and inserts it as the first child of the parent element.</p>
    <p>In our example, we created the custom operation to use parameters that can be specified in
      the dialog box that is displayed after selecting the custom operation in <xref
        href="xml-refactoring-tool.dita#xml-refactoring-tool/refactoring_operations_dlentry">the
          <uicontrol>Refactoring operations</uicontrol> dialog box</xref>. Since various parameters
      can be specified, this custom operation can also be used for other similar tasks. The
      following image shows the parameters that can be specified in our example of the custom
      operation to convert an attribute to an element:<fig id="fig_vsr_3fd_jr">
        <image href="../img/custom_refactoring_operation.png" id="image_tsb_lfd_jr"/>
      </fig></p>
    <p>The next step in creating a custom refactoring operation is to <xref
        href="xml-refactoring-operation-descriptor.dita">create a custom operation descriptor
        file</xref>.</p>
  </body>
  <related-links>
    <link href="custom_operation_sample.dita#topic_ecb_npf_kr"/>
  </related-links>
</topic>
