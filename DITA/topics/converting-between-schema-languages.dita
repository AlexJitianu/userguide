<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="converting-between-schema-languages">
  <title>Converting Between Schema Languages</title><prolog>
    <metadata>
      <keywords><indexterm>Editing XML Documents<indexterm>converting between schema languages</indexterm></indexterm>
        <indexterm>Tools Menu<indexterm>Generate/Convert Schema</indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <body>
    <p>The <uicontrol>Generate/Convert Schema</uicontrol> dialog box allows you to convert a DTD or
      Relax NG (full or compact syntax) schema or a set of XML files to an equivalent XML Schema,
      DTD or Relax NG (full or compact syntax) schema. Where perfect equivalence is not possible due
      to limitations of the target language, <ph keyref="product"/> generates an approximation of
      the source schema. <ph keyref="product"/> uses <xref
        href="http://www.thaiopensource.com/relaxng/trang.html" format="html" scope="external"
          ><term>Trang multiple format converter</term></xref> to perform the actual schema
      conversions. </p>
    <p>To open the <uicontrol>Generate/Convert Schema</uicontrol> dialog box, select the
          <uicontrol><image href="../img/ConvertTo16.png" id="image_kyg_2wm_wr"/>Generate/Convert
        Schema</uicontrol><uicontrol>(<shortcut
          conkeyref="reusable_oxygen_shortcuts_list/alt-shift-c-shortcut"
          product="developer editor"/><shortcut
          conkeyref="reusable_oxygen_shortcuts_list/ctrl-shift-shortcut"
          product="developerEclipse editorEclipse"/>)</uicontrol> action from the <uicontrol
        product="developer editor">Tools</uicontrol><uicontrol
        product="developerEclipse editorEclipse">XML Tools</uicontrol> menu<ph
        product="developer editor"> or from the <uicontrol>Open with</uicontrol> submenu when
        invoking the contextual menu in the <uicontrol>Project view</uicontrol></ph>. </p>
    <fig id="figure-trang-converter-dialog-oxygen" product="editor developer">
      <title>Convert a Schema to Other Schema Language</title>
      <image href="../img/sa_convert_dialog.png"/>
    </fig>
    <fig id="figure-trang-converter-dialog-oxygenEclipse" product="editorEclipse developerEclipse">
      <title>Convert a Schema to Other Schema Language</title>
      <image href="../img/ec_convert_dialog.png"/>
    </fig>
    <p product="editor developer">The language of the source schema is specified with one of the
      four radio buttons in the <uicontrol>Input</uicontrol> panel. If the conversion is based on a
      set of XML files, not just a single XML file, select the <uicontrol>XML Documents</uicontrol>
      option. Then use the file selector to add the XML files involved in the conversion.</p>
    <p>The language of the target schema is specified with one of the four options in the
        <uicontrol>Output</uicontrol> panel. Here you can also choose the encoding, the maximum line
      width and the number of spaces for one level of indentation.</p>
    <p>The conversion can be further fine-tuned by specifying more advanced options available from
      the <uicontrol>Advanced options</uicontrol> button. For example if the input is a DTD and the
      output is an XML Schema the following options are available:</p>
    <p><uicontrol>Input</uicontrol> panel:</p>
    <ul>
      <li><uicontrol>xmlns</uicontrol> - Specifies the default namespace, that is the namespace used
        for unqualified element names.</li>
      <li><uicontrol>xmlns</uicontrol> - Each row specifies the prefix used for a namespace in the
        input schema.</li>
      <li><uicontrol>colon-replacement</uicontrol> - Replaces colons in element names with the
        specified chars when constructing the names of definitions used to represent the element
        declarations and attribute list declarations in the DTD.</li>
      <li><uicontrol>element-define</uicontrol> - Specifies how to construct the name of the
        definition representing an element declaration from the name of the element. The specified
        value must contain exactly one percent character. This percent character is replaced by the
        name of element (after colon replacement) and the result is used as the name of the
        definition.</li>
      <li><uicontrol>inline-attlist</uicontrol> - Instructs the application not to generate
        definitions for attribute list declarations, but instead move attributes declared in
        attribute list declarations into the definitions generated for element declarations. This is
        the default behavior when the output language is XSD.</li>
      <li><uicontrol>attlist-define</uicontrol> - Specifies how to construct the name of the
        definition representing an attribute list declaration from the name of the element. The
        specified value must contain exactly one percent character. This percent character is
        replaced by the name of element (after colon replacement) and the result is used as the name
        of the definition.</li>
      <li><uicontrol>any-name</uicontrol> - Specifies the name of the definition generated for the
        content of elements declared in the DTD as having a content model of ANY.</li>
      <li><uicontrol>strict-any</uicontrol> - Preserves the exact semantics of <term>ANY</term>
        content models by using an explicit choice of references to all declared elements. By
        default, the conversion engine uses a wildcard that allows any element</li>
      <li><uicontrol>generate-start</uicontrol> - Specifies whether the conversion engine should
        generate a start element. DTD's do not indicate what elements are allowed as document
        elements. The conversion engine assumes that all elements that are defined but never
        referenced are allowed as document elements.</li>
      <li><uicontrol>annotation-prefix</uicontrol> - Default values are represented using an
        annotation attribute <codeph>prefix:defaultValue</codeph> where prefix is the specified value and is
        bound to <codeph>http://relaxng.org/ns/compatibility/annotations/1.0</codeph> as defined by
        the RELAX NG DTD Compatibility Committee Specification. By default, the conversion engine
        will use a for prefix unless that conflicts with a prefix used in the DTD.</li>
    </ul>
    <p><uicontrol>Output</uicontrol> panel:</p>
    <ul>
      <li><uicontrol>disable-abstract-elements</uicontrol> - Disables the use of abstract elements
        and substitution groups in the generated XML Schema. This can also be controlled using an
        annotation attribute.</li>
      <li><uicontrol>any-process-contents</uicontrol> - One of the values: strict, lax, skip.
        Specifies the value for the <codeph>processContents</codeph> attribute of any elements. The
        default is skip (corresponding to RELAX NG semantics) unless the input format is DTD, in
        which case the default is strict (corresponding to DTD semantics).</li>
      <li><uicontrol>any-attribute-process-contents</uicontrol> - Specifies the value for the
        <codeph>processContents</codeph> attribute of <codeph>anyAttribute</codeph> elements. The default is skip (corresponding to
        RELAX NG semantics).</li>
    </ul>
  </body>
</topic>
