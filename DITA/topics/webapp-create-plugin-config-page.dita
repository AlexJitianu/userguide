<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webapp-create-plugin-config-page">
  <title>How to Create a Plugin Configuration Page</title>
  <body>
    <p>To create a configuration page for a plugin that does not already have the <uicontrol><image
          href="../img/ConfigureSearchScope16.png"/>Configure</uicontrol> icon displayed in the
        <uicontrol>Administration</uicontrol> page, follow these steps:<ol>
        <li>Register a <codeph>WebappServlet</codeph> extension type with a <codeph>role</codeph>
          attribute set to <userinput>config</userinput> in your <filepath>plugin.xml</filepath>
            file:<codeblock outputclass="language-xml">&lt;extension type="WebappServlet" role="config" class="com.oxygenxml.sdksamples.github.GithubPluginConfigExtension"/></codeblock><p>The
              <codeph>class</codeph> attribute value should point to an extension of the <xref
              href="http://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/PluginConfigExtension.html"
              format="html" scope="external"><apiname>PluginConfigExtension</apiname></xref>
            class.</p></li>
        <li>When extending the <xref
            href="http://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/PluginConfigExtension.html"
            format="html" scope="external"><apiname>PluginConfigExtension</apiname></xref> class,
          consider the following notes:<ul>
            <li>Implement the <apiname>getOptionsForm</apiname> method to return an HTML of your
              configuration page that contains user inputs or buttons so that your plugin and
              JavaScript communicates with the <apiname>PluginConfigExtensions</apiname> HTTP
              API.</li>
            <li>Implement the <apiname>getOptionsJson</apiname> method to return a JSON string of
              the current options for a plugin. (The JSON should only contain key values, where
              values is of the type <userinput>string|number|boolean</userinput> with no arrays or
              other objects).</li>
            <li>Implement the <apiname>getPath</apiname> method to return a non-empty string that
              represents the path for which this extension will be served.<p>For
              example:</p><codeblock outputclass="language-ini"> {webapp-context}/plugins-dispatcher/RESULT_OF_GETPATH</codeblock></li>
            <li>If you need to override the <apiname>init</apiname> method, make sure you call
                <apiname>super.init()</apiname>. Otherwise, options will not be saved to disk and
              will be lost when you restart the application.</li>
            <li>If you need to override any of the <apiname>doPut/doDelete</apiname> methods, make
              sure you call the <apiname>saveOptions</apiname> method at the end to save the options
              to disk.</li>
            <li>If you need to override the <apiname>doGet</apiname> method, make sure it responds
              with the result of <apiname>getOptionsForm</apiname> for header
                <codeph>Accept=text/html</codeph>, and with the result of
                <apiname>getOptionsJson</apiname> when called with header
                <codeph>Accept=application/json</codeph>. Use the <apiname>getOption</apiname> or
                <apiname>getDefaultOptions</apiname> methods to access the current or default
              options.</li>
          </ul><note type="tip">For an implementation example, you can look at
              <apiname>com.oxygenxml.sdksamples.github.GithubPluginConfigExtension</apiname> in the
              <?oxy_comment_start author="steven_higgs" timestamp="20151013T113830+0300" comment="Add a link or something later on, when we have a way to link it somewhere useful."?><filepath>oxygen-sdk-samples</filepath>
            project<?oxy_comment_end?>.</note></li>
        <li>The <apiname>getOptionsForm</apiname> method should return an HTML page with necessary
          logic to call the <apiname>doMethods</apiname> of the <xref
            href="http://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/PluginConfigExtension.html"
            format="html" scope="external"><apiname>PluginConfigExtension</apiname></xref> class.
          The options page should have some JavaScript code that listens for message events and
          responds to the <codeph>'apply'</codeph> and <codeph>'restoreDefaults'</codeph> actions by
          calling the <apiname>doPut</apiname>and <apiname>doDelete</apiname> methods respectively,
          as in the following
          example:<codeblock outputclass="language-javascript">window.addEventListener('message', function (event) {
  var action = event.data.action;
  var origin = event.origin;

  switch (action) {
  case 'apply':
    // call the doPut method of your PluginConfigExtension here using an XMLHttpRequest
    // and send the required options taken from the inputs you sent with the getOptionsForm method.
    var xhr = new XMLHttpRequest();
    xhr.open("PUT", "../plugins-dispatcher/RESULT_OF_GETPATH");


    // after receiving the response send it back to the sender of the message with a done property
    // set to true if the action completed successfully or false otherwise. And send a message for
    // the user as well. Also, make sure to set the origin to the event.origin otherwise the message
    // will be ignored
    event.source.postMessage({done: true, message: 'Options set succesfully for plugin X.'}, origin);
    break;
  case 'restoreDefaults':
    // call the doDelete method of you PluginConfigExtension here using an XMLHttpRequest

    // after receiving the response send it back to the sender of the message with a done property set
    // to true if the action completed successfully or false otherwise. And send a message for the user
    // as well. Also, make sure to set the origin to the event.origin otherwise the message will be ignored
    event.source.postMessage({done: true, message: 'Options reset successfully for plugin X.'}, origin);
    break;
}</codeblock></li>
      </ol><b>Result:</b> A <uicontrol><image href="../img/ConfigureSearchScope16.png"
        />Configure</uicontrol> icon is now displayed next to its name in the
        <uicontrol>Administration</uicontrol> page. </p>
  </body>
</topic>
