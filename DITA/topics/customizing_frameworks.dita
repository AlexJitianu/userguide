<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing_frameworks">
  <title>Customizing <ph keyref="webappComponent"/> Frameworks</title>
  <body>
    <p>The custom <xref href="doc-type.dita#doc-type">frameworks</xref> that are designed for
      documentation purposes (such as DITA, DocBook, or TEI) can be reused interchangeably between
      the <ph keyref="product"/> standalone distribution and the <ph keyref="webappComponent"/>. However,
      some fine-tuning might be necessary to maximize the editing experience for your content
      authors. The advantages of using a common framework include:<ul id="ul_rlf_yvy_1r">
        <li>Easier development and testing, since you can test most of the functionality in the
          standalone version of <ph keyref="product"/> using advanced tools such as the
            <uicontrol>CSS Inspector</uicontrol>, <uicontrol>CSS Editor</uicontrol>, or the
            <uicontrol>Document Type Association</uicontrol> customization dialog box.</li>
        <li>Uniform experience across multiple <ph keyref="product"/> distributions.</li>
        <li>Ability to reuse previously developed frameworks.</li>
      </ul></p>
    <section>
      <title>Developing and Testing a Framework Using the WebApp Add-on</title>
      <p>The following procedures assumes that you have access to an <ph keyref="product"/>
        standalone installation. This is not a mandatory requirement, but rather a way to speed up
        the development process.</p>
      <p>
        <ol id="ol_g2c_pnz_1r">
          <li>Use the standalone installation of <ph keyref="product"/> to customize a specific
            framework for whatever type of documentation that you require. Modifications made to the
            framework are instantly visible in the standalone version of <ph keyref="product"/>, but
            if you want to preview them in the <ph keyref="webappComponent"/>, proceed to the next step.</li>
          <li><xref href="http://www.oxygenxml.com/oxygen_webapp_add_on.html" format="html"
              scope="external">Run the <ph keyref="webappComponent"/> using the add-on distribution and test
              the framework</xref>.<note>The changes that you make to your framework will not
              automatically be reflected in the <ph keyref="webappComponent"/> if it was already running. To
              see the results of changes, close the server using the <b>Close and stop server</b>
              button and start it again. </note></li>
        </ol>
      </p>
    </section>
    <section>
      <title>Deploying a Framework</title>
      <p>
        <ol id="ol_gnd_mmz_1r">
          <li>Copy your customized framework into the
              <filepath>bundle-frameworks/oxygen-frameworks/</filepath> folder of the <xref
              href="http://www.oxygenxml.com/oxygen_sdk_maven.html" format="html" scope="external"
              >oXygen XML SDK project</xref>.</li>
          <li><xref href="http://www.oxygenxml.com/oxygen_webapp_running_and_testing.html"
              format="html" scope="external">Build the SDK project and deploy it</xref>.</li>
        </ol>
      </p>
    </section>
    <section>
      <title>Customization Tips</title>
      <p>
        <ul id="ol_css_3h1_br">
          <li> If you want to use CSS rules that only apply when the framework is used in the <ph
              keyref="webapp"/>, use the following <codeph>media</codeph>
            query:<codeblock outputclass="language-css">@media oxygen AND (platform:webapp) {
 ... 
}</codeblock></li>
          <li>In the <filepath>web</filepath> folder of each framework, you can add a
              <filepath>framework.js</filepath> file that calls the <xref
              href="customizing_js.dita#customizing_js">JavaScript API</xref> to implement custom
            editing actions. The possible use cases include the following:<ul>
              <li>Create custom actions and add them to the toolbar or contextual menu. For more
                details, see the <xref
                  href="http://www.oxygenxml.com/maven/com/oxygenxml/oxygen-webapp/17.1.0/jsdoc/tutorial-customaction.html"
                  format="html" scope="external">JS custom action tutorial</xref>.</li>
              <li>Create custom form controls. For more details, see the <xref
                  href="http://www.oxygenxml.com/maven/com/oxygenxml/oxygen-webapp/17.1.0/jsdoc/tutorial-formcontrol.html"
                  format="html" scope="external">JS form control tutorial</xref>.</li>
              <li>Add additional views. For more details, see the <xref
                  href="http://www.oxygenxml.com/maven/com/oxygenxml/oxygen-webapp/17.1.0/jsdoc/tutorial-customview.html"
                  format="html" scope="external">JS custom view tutorial</xref>.</li>
            </ul></li>
          <li>If the framework contains <uicontrol>Author</uicontrol> mode operations (Java
            implementations of the <codeph>ro.sync.ecss.extensions.api.AuthorOperation</codeph>
            interface), they can be enabled to be used by the <ph keyref="webappComponent"/> using the
              <codeph>ro.sync.ecss.extensions.api.WebappCompatible</codeph>
                annotation.<note><uicontrol>Author</uicontrol> mode operations that use <term>Java
                Swing</term> components to display a graphical interface are not compatible with <ph
                keyref="webapp"/> and they should not be annotated.</note></li>
          <li><ph keyref="webappComponent"/> continuously validates the XML documents using the default
            validation scenarios defined at framework level. Only the validation units that have the
              <uicontrol>Automatic Validation</uicontrol> option selected in the <uicontrol>Document
              Type Association</uicontrol> customization dialog box will be used (this option is set
            in the <uicontrol>Edit Scenario</uicontrol> dialog box that is accessed by editing a
            scenario in the <uicontrol>Validation</uicontrol> subtab when editing a document
            type).</li>
        </ul>
      </p>
    </section>
  </body>
</topic>
