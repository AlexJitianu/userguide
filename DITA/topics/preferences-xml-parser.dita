<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-xml-parser">
  <title>XML Parser Preferences</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Configure the Application<indexterm>XML parser</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>To open the <uicontrol>XML Parser</uicontrol> preferences page, go to <menucascade>
        <uicontrol product="editor author svnClient developer">Options</uicontrol>
        <uicontrol product="editorEclipse authorEclipse developerEclipse">Window</uicontrol>
        <uicontrol>Preferences</uicontrol>
        <uicontrol product="editorEclipse developerEclipse">oXygen XML Editor</uicontrol>
        <uicontrol product="authorEclipse">Author</uicontrol>
        <uicontrol>XML</uicontrol>
        <uicontrol>XML Parser</uicontrol>
      </menucascade>.</p>
    <p>The configurable options of the built-in XML parser are the following:</p>
    <ul>
      <li><uicontrol>Enable parser caching (validation and content completion)</uicontrol> - enables
        re-use of internal models when validating and provides content completion in opened XML
        files which reference the same schemas (grammars) like DTD, XML Schema, RelaxNG;</li>
      <li><uicontrol>Ignore the DTD for validation if a schema is specified</uicontrol> - forces
        validation against a referred schema (W3C XML Schema, Relax NG schema) even if the document
        includes also a DTD DOCTYPE declaration. This option is useful when the DTD declaration is
        used only to declare DTD entities and the schema reference is used for validation against a
        W3C XML Schema or a Relax NG schema;<note>Schematron schemas are treated as additional
          schemas. The validation of a document associated with a DTD and referring a Schematron
          schema is executed against both the DTD and the Schematron schema, regardless of the value
          of the <uicontrol>Ignore the DTD for validation if a schema is specified</uicontrol>
          option.</note></li>
      <li><uicontrol>Enable XInclude processing</uicontrol> - enables XInclude processing. If
        checked, the XInclude support in <ph keyref="product"/> is turned on for validation<ph
          product="author authorEclipse editor editorEclipse">, rendering in Author mode</ph> and
        transformation of XML documents;</li>
      <li><uicontrol>Base URI fix-up</uicontrol> - according to the specification for XInclude,
        processors must add an <codeph>xml:base</codeph> attribute to elements included from
        locations with a different base URI. Without these attributes, the resulting infoset
        information would be incorrect.<p>Unfortunately, these attributes make XInclude processing
          not transparent to Schema validation. One solution to this is to modify your schema to
          allow <codeph>xml:base</codeph> attributes to appear on elements that might be included
          from different base URIs.</p><p>If the addition of <codeph>xml:base</codeph> and / or
            <codeph>xml:lang</codeph> is undesired by your application, you can disable base URI
          fix-up.</p></li>
      <li><uicontrol>Language fix-up</uicontrol> - the processor will preserve language information
        on a top-level included element by adding an <codeph>xml:lang</codeph> attribute if its
        include parent has a different [language] property. If the addition of
          <codeph>xml:lang</codeph> is undesired by your application, you can disable the language
        fix-up;</li>
      <li><uicontrol>DTD post-validation</uicontrol> - enable this option to validate an XML file
        against the associated DTD, after all the content merged to the current XML file using
          <codeph>XInclude</codeph> was resolved. In case you disable this option, the current XML
        file is validated against the associated DTD before all the content merged to the current
        XML file using <codeph>XInclude</codeph> is resolved.</li>
    </ul>
  </body>
</topic>
