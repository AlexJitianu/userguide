<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing_plugins">
  <title>Customizing <ph keyref="webapp"/> Plugins</title>
  <body>
    <p>We currently provide support for the <b>URLStreamHandler</b> and <b>WorkspaceAccess</b>
      plugins in the WebApp. </p>
    <ol id="ol_dn1_c23_br">
      <li>The <b>URLStreamHandler plugins</b> can be used to integrate the WebApp with CMS-es or XML
        databases. There is an example URLStreamHandler provided in <xref
          href="http://www.oxygenxml.com/oxygen_sdk_maven.html" format="html" scope="external"
          >oXygen XML SDK project</xref> in the
          <b>oxygen-sample-plugins/oxygen-sample-plugin-custom-protocol</b> folder. The plugin uses
        the <b>cproto</b> protocol to access the file system of the server and can be used as a
        starting point.<note>For more details about implementing an authentication mechanism, see
          the <xref href="how_to_cms_auth.dita"/> topic.</note></li>
      <li>In the <b>WorkspaceAccess plugins</b> most of the methods used to configure the oXygen GUI
        are unavailable, but the plugins can still be used, for example, to configure an
          <codeph>javax.xml.transform.URIResolver</codeph>. <note>The
            <codeph>ro.sync.exml.workspace.api.PluginWorkspace</codeph> instance passed to the
          plugin implements also the
            <codeph>ro.sync.ecss.extensions.api.webapp.access.WebappPluginWorkspace</codeph>
          interface and provides access to some <ph keyref="webapp"/>-specifc
        functionality.</note></li>
    </ol>
    <p>If you have already developed such oXygen plugins, they can be added in the
        <b>bundle-plugin/dropins</b> folder in the Maven project.</p>
    <p>If you are developing a new oXygen plugin you are encouraged to use as a starting point any
      of the existing plugins. Then you should add the resulting Maven project as a dependency (or
      even a sub-module) in the <b>oxygen-sample-plugins</b> module.</p>
  </body>
</topic>
