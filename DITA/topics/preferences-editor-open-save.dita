<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-editor-open-save">
  <title>Open / Save Preferences</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Configure the Application<indexterm>Editor
              preferences<indexterm>open/save</indexterm></indexterm></indexterm>
        <indexterm>OutOfMemory</indexterm>
        <indexterm>Out Of Memory</indexterm>
        <indexterm>OutOfMemoryError</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> lets you control a number of things about how files are opened and
      saved. To configure the <uicontrol>Open / Save</uicontrol> options, <ph
        conkeyref="reusable.menus/open-the-preferences-page"/> and go to <menucascade>
        <uicontrol>Editor</uicontrol>
        <uicontrol>Open / Save</uicontrol>
      </menucascade>.</p>
    <section>
      <title product="author developer editor authorEclipse developerEclipse editorEclipse"
        >Open</title>
      <p>The following options apply to opening bidirectional (BIDI) text<ph
          product="author developer editor authorEclipse developerEclipse editorEclipse"> in the
            <xref keyref="mode.text">text mode</xref> editor</ph>.</p>
      <ul>
        <li product="author developer editor svnClient"><uicontrol>When bidirectional (BIDI) text is
            detected</uicontrol> - Allows you to choose what happens when you try to open a file
          that contains BIDI Unicode characters. You can choose between <uicontrol>Enable
            bidirectional editing mode</uicontrol>, <uicontrol>Disable bidirectional editing
            mode</uicontrol> and <uicontrol>Prompt for each document</uicontrol>.</li>
        <li product="author developer editor svnClient" id="disable-bidi-support"><uicontrol>Disable
            bidirectional text support for documents larger than (Characters)</uicontrol> - Enabling
          bidirectional text editing support can affect performance on large files. When this option
          is selected,  bidirectional editing is turned off for files exceeding the specified size,
          even if the <uicontrol>When bidirectional (BIDI) text is detected</uicontrol> option is
          set to <uicontrol>Enable bidirectional editing mode</uicontrol>.</li>
        <li product="svnClient"><uicontrol>Show BIDI limit warning</uicontrol> - It this option is
          selected, <ph keyref="product"/> will warn you if bidirectional editing support is turned
          off because a file exceeds the specified limit.</li>
      </ul>
    </section>
    <section product="author developer editor authorEclipse developerEclipse editorEclipse">
      <title>Save</title>
      <p>The following options apply to saving files in all edit modes:</p>
      <ul>
        <li product="author developer editor"><uicontrol>Safe save (only for local
            files)</uicontrol> - This option provides an increased degree of protection in the
          unlikely event of a failure of the <uicontrol>Save</uicontrol> action. It creates a
          temporary file that holds the edited content until it is safely saved in the original
          file. If the <uicontrol>Save</uicontrol> action fails, the temporary file is kept in the
          system temporary directory, <uicontrol>OxygenXMLTemp</uicontrol>.
          <?oxy_comment_start author="Mark" timestamp="20140913T113654-0400" comment="Does Oxygen detect and recover the file when Save fails?"?></li>
        <?oxy_comment_end?>
        <li product="editor author developer"><uicontrol>Make backup copy on save (only for local
            files)</uicontrol> - If selected, a backup copy is made when saving the edited document.
          This option is available only for local files (files that are stored on the local file
          system). The default backup file extension is <filepath>.bak</filepath>, but you can
          change it as you prefer.</li>
        <li product="editor author developer"><uicontrol>Enable automatic save</uicontrol> - When
          selected, your document are saved automatically after a preset time interval.</li>
        <li product="editor author developer"><uicontrol>Automatic save interval
            (minutes)</uicontrol> - Selects the interval in minutes between two automatic save
          actions.</li>
        <?oxy_comment_start author="Mark" timestamp="20140913T130412-0400" comment="Note that these two options are listed in reverse order in Eclipse.
"?>
        <li><uicontrol>Save all files before transformation or validation</uicontrol> - Saves all
          open files before validating or transforming an XML document. This ensures that any
          dependencies are resolved, for example when modifying both the XML document and its XML
          Schema.</li>
        <li><uicontrol>Check errors on save</uicontrol> -
          <?oxy_comment_start author="Mark" timestamp="20140913T113845-0400" comment="What sort of errors does it check for? Does this mean it runs a validation scenario?" mid="2"?>If
          enabled, <ph keyref="product"/> checks your document for errors before saving
          it.<?oxy_comment_end?><?oxy_comment_end mid="2"?></li>
        <li product="editor author developer"><uicontrol>Save all files before calling external
            tools</uicontrol> - If selected, all files are saved before executing an <xref
            href="integrating-external-tools.dita#integrating-external-tools" format="dita">external
            tool</xref>.</li>
      </ul>
    </section>
    <section product="author developer editor authorEclipse developerEclipse editorEclipse">
      <title>Performance</title>
      <p>The following options cover performance issues when dealing with long files or files with
        long lines:</p>
      <ul id="ul_wgj_wvn_kp">
        <li product="editor author developer"><uicontrol>Optimize loading in the Text edit mode for
            files over (MB)</uicontrol> - File loading is optimized for reduced memory usage for any
          file with a size larger than this value. This is useful for editing very large files, but
          it comes with <xref href="editing-large-documents.dita#editing-large-documents">several
            restrictions</xref> on memory-intensive operations.</li>
        <li product="editor author developer"><uicontrol>Show warning when loading large
            documents</uicontrol> - <ph keyref="product"/> will warn you if you open a file larger
          than specified.</li>
        <li product="editor author developer"><uicontrol>Optimize loading for documents with lines
            longer than (Characters)</uicontrol> - Line wrap is turned on for a document containing
          lines that exceed the length specified with this option. For a list of the restrictions
          applied to a document with long lines, see <xref
            href="long-lines-document.dita#long-lines-document" format="dita">the <uicontrol>Editing
              Documents with Long Lines</uicontrol> section.</xref></li>
        <li product="editor author developer"><uicontrol>Show warning when loading documents with
            long lines</uicontrol> - When selected, <ph keyref="product"/>will warn you when you
          open a file with any lines longer than specified. To reduce the length of lines in a file,
            <xref keyref="edit.format-and-indent-XML">format and indent the document</xref> after it
          is opened in the editor panel. For a list of the restrictions applied to a document with
          long lines, see  <xref href="long-lines-document.dita#long-lines-document" format="dita"
          />.</li>
        <li><uicontrol>Clear undo buffer on save</uicontrol> - If selected, <ph keyref="product"/>
          clears its undo buffer when you save a document. Only modifications made after you have
          saved the document can be undone. Select this option if you encounter frequent <term>out
            of memory</term> problems (<uicontrol>OutOfMemoryError</uicontrol>) when editing very
          large documents.</li>
        <li product="author developer editor"><uicontrol>Consider application bundles to be
            directories when browsing</uicontrol> - This option is available only on the Mac OS X
          platform. When selected, the file browser dialog allows browsing inside an application
          bundle as in a regular folder. Otherwise, the file browser dialog does not allow browsing
          inside an application bundle, as the Finder application does on Mac OS X.
          <?oxy_comment_start author="Mark" timestamp="20140913T114837-0400" comment="Not sure that this should be here. Presumably there are many other settings that can be configured this way as well, but we don&apos;t list them all here. I think setting things this way is part of a differnt task for a different user and should be documented differently. (Or else we should be consisten and document this approach for all settings."?>The
          same effect can be obtained by setting the property
              <i><term>apple.awt.use-file-dialog-packages</term></i> to <term>true</term> or
            <term>false</term> in the <filepath>Info.plist</filepath> descriptor file of the <ph
            keyref="product"/> application:
          <codeblock outputclass="language-xml">
&lt;key&gt;apple.awt.use-file-dialog-packages&lt;/key&gt;
&lt;string&gt;false&lt;/string&gt;<?oxy_comment_end?></codeblock>
        </li>
      </ul>
    </section>
  </body>
</topic>
