<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="preferences-editor-open-save">
  <title>Open / Save Preferences</title>
  <!--Proofed-->
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Configure the Application<indexterm>Editor
              preferences<indexterm>open/save</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> lets you control how files are opened and saved. To configure the
        <uicontrol>Open / Save</uicontrol> options, <ph
        conkeyref="reusables-preferences-pages/open-the-preferences-page"/> and go to <menucascade>
        <uicontrol>Editor</uicontrol>
        <uicontrol>Open / Save</uicontrol>
      </menucascade>.</p>
    <section
      product="author developer editor svnClient authorEclipse developerEclipse editorEclipse">
      <title>Open</title>
      <p>The following options apply to opening files:</p>
      <ul>
        <li product="author developer editor"><uicontrol>Lock local resources</uicontrol> - When
          this option is enabled and you open a file from the local file system or a shared network
          drive, <ph keyref="product"/> locks the file for the current user and the file cannot be
          modified by other users while the lock exists. However, other users are offered the
          possibility to edit the file, but without overwriting it. If they decide to continue, they
          will be asked to save the changes in a different file or drop them. Newly created files
          are <term>locked</term> when you first save them. If you enable this option with files
          already opened in <ph keyref="product"/>, it will <term>lock</term> all the currently
          opened files. If you disable this option with files already opened, it will unlock them by
          deleting the corresponding <filepath>.lock</filepath> files.</li>
        <li product="author developer editor svnClient"><uicontrol>Support for Special
            Characters</uicontrol> section - You can choose how you want <ph keyref="product"/> to
          handle bidirectional text, Asian languages, or other special characters when they are
          detected. You can choose one of the following:<ul id="ul_fgm_2w4_sq">
            <li><uicontrol>Enable support for special characters</uicontrol></li>
            <li><uicontrol>Disable support for special characters</uicontrol></li>
            <li><uicontrol>Prompt for each document</uicontrol></li>
          </ul></li>
        <li product="author developer editor svnClient" id="disable-bidi-support"><uicontrol>Disable
            special characters support for documents larger than (characters)</uicontrol> - Enabling
          bidirectional text editing support can affect performance on large files. When this option
          is selected, bidirectional editing is disabled for files exceeding the specified size,
          even if the <uicontrol>Enable support for special characters</uicontrol> option is
          selected.</li>
        <li product="svnClient"><uicontrol>Show BIDI limit warning</uicontrol> - It this option is
          selected, <ph keyref="product"/> will warn you if bidirectional editing support is
          disabled and a file exceeds the specified limit.</li>
        <li product="authorEclipse developerEclipse editorEclipse"><uicontrol>Format document when
            longest line exceeds</uicontrol> - <ph keyref="product"/> will create line breaks if the
          characters in a line exceed the specified value. You can choose one of the following:<ul
            id="ul_fdg_hj4_sq">
            <li><uicontrol>Always format</uicontrol></li>
            <li><uicontrol>Never format</uicontrol></li>
            <li><uicontrol>Always ask</uicontrol></li>
          </ul></li>
      </ul>
    </section>
    <section product="author developer editor authorEclipse developerEclipse editorEclipse">
      <title>Save</title>
      <p>The following options apply to saving files:</p>
      <ul>
        <li product="author developer editor"><uicontrol>Safe save (only for local
            files)</uicontrol> - In the unlikely event of a failure of the
            <uicontrol>Save</uicontrol> action, this option provides increased protection from
          corruption of the original file. When this option is enabled, it saves the content to a
          temporary file and if the save is unsuccessful, the editor preserves its unsaved state
          status.</li>
        <li product="editor author developer"><uicontrol>Make backup copy on save (only for local
            files)</uicontrol> - If selected, a backup copy is made when saving the edited document.
          This option is available only for local files (files that are stored on the local file
          system). The default backup file extension is <filepath>.bak</filepath>, but that can be
          changed.</li>
        <li product="editor author developer"><uicontrol>Enable automatic save</uicontrol> - When
          selected, your documents are saved automatically, after a preset time interval.</li>
        <li product="editor author developer"><uicontrol>Automatic save interval
            (minutes)</uicontrol> - Selects the interval, in minutes, for the automatic save
          action.</li>
        <li><uicontrol>Check errors on save</uicontrol> - If enabled, <ph keyref="product"/> runs a
          validation that checks your document for errors before saving it.</li>
        <li><uicontrol>Save all files before transformation or validation</uicontrol> - Saves all
          open files before validating or transforming an XML document. This ensures that any
          dependencies are resolved when modifying the XML document and its XML Schema.</li>
        <li product="editor author developer"><uicontrol>Save all files before calling external
            tools</uicontrol> - If selected, all files are saved before executing an <xref
            href="integrating-external-tools.dita#integrating-external-tools" format="dita">external
            tool</xref>.</li>
      </ul>
    </section>
    <section product="author developer editor authorEclipse developerEclipse editorEclipse">
      <title>Performance</title>
      <p>The following options cover performance issues when dealing with large files:</p>
      <ul id="ul_wgj_wvn_kp">
        <li product="editor author developer"><uicontrol>Optimize loading in the Text edit mode for
            files over (MB)</uicontrol> - File loading is optimized for reduced memory usage for any
          file with a size larger than this value. This is useful for editing large files, but it
          comes with <xref href="editing-large-documents.dita#editing-large-documents">several
            restrictions</xref> on memory-intensive operations.</li>
        <li product="editor author developer"><uicontrol>Show warning when loading large
            documents</uicontrol> - <ph keyref="product"/> will warn you if you open a file that is
          bigger than the specified size.</li>
        <li product="editor author developer"><uicontrol>Optimize loading for documents with lines
            longer than (Characters)</uicontrol> - Line wrap is turned on for a document that
          contains lines that exceed the specified length. For a list of the restrictions applied to
          a document with long lines, see <xref href="long-lines-document.dita#long-lines-document"
            format="dita">the <uicontrol>Editing Documents with Long Lines</uicontrol>
            section.</xref></li>
        <li product="editor author developer"><uicontrol>Show warning when loading documents with
            long lines</uicontrol> - When selected, <ph keyref="product"/>will warn you when you
          open a file with lines longer than the specified length. To reduce the length of lines in
          a file, <xref keyref="edit_format-and-indent-XML">format and indent the document</xref>
          after it is opened in the editor panel. For a list of the restrictions applied to a
          document with long lines, see <xref href="long-lines-document.dita#long-lines-document"
            format="dita"/>.</li>
        <li><uicontrol>Clear undo buffer on save</uicontrol> - If selected, <ph keyref="product"/>
          clears its undo buffer when you save a document. Therefore, modifications made prior to
          saving the document cannot be undone. Select this option if you frequently encounter
            <term>out of memory</term> errors when editing large documents.</li>
        <li product="author developer editor"><uicontrol>Consider application bundles to be
            directories when browsing</uicontrol> - This option is available only on the Mac OS X
          platform. When selected, the file browser dialog box allows browsing inside an application
          bundle, as in a regular folder. Otherwise, the file browser dialog box does not allow
          browsing inside an application bundle, as the Finder application does on Mac OS X.
            <note>The same effect can be obtained by setting the property
                <i><term>apple.awt.use-file-dialog-packages</term></i> to <term>true</term> or
              <term>false</term> in the <filepath>Info.plist</filepath> descriptor file of the <ph
              keyref="product"/> application:
            <codeblock outputclass="language-xml">&lt;key>apple.awt.use-file-dialog-packages&lt;/key>
&lt;string>false&lt;/string></codeblock></note>
        </li>
      </ul>
    </section>
  </body>
</topic>
