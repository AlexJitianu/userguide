<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="oxy-editor-properties">
  <title>oxy_editor() Custom Form Control Properties</title>
  <!--Proofed
RESOURCE-ONLY TOPIC-->
  <shortdesc>The <codeph>oxy_editor</codeph> function allows you to edit attributes or simple
    element values in the <uicontrol>Author</uicontrol> mode, using standard built-in form controls
    (such as combo boxes, text fields, pop-ups, URL choosers, etc.) or to implement your own custom
    form controls and renderers.</shortdesc>
  <body>
    <codeblock outputclass="language-css">myElement {
    content: oxy_editor(
        type, [<i>my form control</i>],
        edit, "@my_attr"
    )
}</codeblock>
    <p>The <codeph>oxy_editor</codeph> custom form control supports the following properties:</p>
    <p>
      <ul>
        <li><ph conkeyref="reusables-author-mode-customization/actionContext-property"/></li>
        <li conkeyref="reusables-author-mode-customization/actionID-property"/>
        <li><ph conkeyref="reusables-author-mode-customization/action-property"/><p>
            <codeblock outputclass="language-css">oxy_action(
          name, 'Insert Section', 
          description, 'Insert an element after the current one', 
          icon, url('insert.png'), 
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
          arg-fragment, '&lt;element&gt;${caret}&lt;/element&gt;',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)</codeblock>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/action-list-property"/><p>
            <codeblock outputclass="language-css">oxy_action_list(
          oxy_action(
                name, 'Insert', 
                description, 'Insert an element after the current one', 
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation', 
                arg-fragment, '&lt;element&gt;&lt;/element&gt;',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
          ),
          oxy_action(
                name, 'Delete', 
                description, 'Deletes the current element', 
                operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation' 
          )
      )</codeblock>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/actionDisplayStyle-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/background-color-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/color-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/columns-property"/></li>
        <li>
          <p id="contentType_property"><codeph>contentType</codeph> - Specifies the type of content
            for which the form control offers syntax highlighting. The following values are
            supported: <codeph>text/css; text/shell; text/cc; text/xquery; text/xml; text/python;
              text/xsd; text/c; text/xpath; text/javascript; text/xsl; text/wsdl; text/html;
              text/xproc; text/properties; text/sql; text/rng; text/sch; text/json; text/perl;
              text/php; text/java; text/batch; text/rnc; text/dtd; text/nvdl;
            text/plain.</codeph></p>
        </li>
        <li>
          <p conkeyref="reusables-author-mode-customization/edit_property"/>
        </li>
        <li><ph id="editorSort"><codeph>editorSort</codeph> - Allows you to sort the values rendered
            on the form control. The possible values of this property are <codeph>ascending</codeph>
            and <codeph>descending</codeph>.</ph></li>
        <li><ph id="enable-read-only-context-property"><codeph>enableInReadOnlyContext</codeph> - To
            enable <xref href="../topics/button-editor.dita#button-editor">button form
              controls</xref> or <xref href="button-group-editor.dita#button-group-editor">groups of
              buttons form controls</xref> this property needs to be set to <codeph>true</codeph>.
            This property can be used to specify areas as <term>read-only</term> (by setting the
              <codeph>-oxy-editable</codeph> property to <codeph>false</codeph>). This is useful
            when you want to use an action that does not modify the context.</ph> If this property
          is missing or set to <codeph>false</codeph>, the <xref
            href="../topics/button-editor.dita#button-editor">button form controls</xref> or <xref
            href="button-group-editor.dita#button-group-editor">groups of buttons form
            controls</xref> are disabled. </li>
        <li><ph conkeyref="reusables-author-mode-customization/fontInherit-property"/></li>
        <li><ph id="href-property"><codeph>href</codeph> - The absolute or relative location of a
            resource.</ph></li>
        <li><ph id="id-property"><codeph>id</codeph> - The unique identifier of an item.</ph></li>
        <li><ph id="indentOnTab_property"><codeph>indentOnTab</codeph> - Specifies the behavior of
            the <uicontrol>Tab</uicontrol> key. If the value of this property is set to
              <codeph>true</codeph> (default value), the <uicontrol>Tab</uicontrol> key inserts
            characters. If it is set to <codeph>false</codeph>, <uicontrol>Tab</uicontrol> is used
            for navigation, jumping to the next editable position in the document.</ph></li>
        <li><ph id="labels-property"><codeph>labels</codeph> - This property must have the same
            number of items as the <codeph>values</codeph> property. Each item provides a literal
            description of the items listed in the <codeph>values</codeph> property.</ph></li>
        <li><ph id="rendererSeparator-property"><codeph>rendererSeparator</codeph> - Defines a
            separator used when multiple values are rendered. If not specified, the value of the
              <codeph>resultSeparator</codeph> property is used.</ph></li>
        <li><ph id="rendererSort"><codeph>rendererSort</codeph> - Allows you to sort the values
            rendered on the form control label. The possible values of this property are
              <codeph>ascending</codeph> and <codeph>descending</codeph>.</ph></li>
        <li><ph conkeyref="reusables-author-mode-customization/resultSeparator-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/property-rows"/></li>
        <li><ph id="selectionMode-property"><codeph>selectionMode</codeph> - Specifies whether the
            form control allows the selection of a single value or multiple values. The predefined
            values of this property are <codeph>single</codeph> (default value) and
              <codeph>multiple</codeph>.</ph></li>
        <li>
          <p id="show_icon"><codeph>showIcon</codeph> - Specifies if the action icon should be
            displayed on the button form control. If this property is missing then the button
            displays the icon only if it is available, or the text if the icon is not available. The
            values of this property can be <codeph>true</codeph> or
            <codeph>false</codeph>.<codeblock outputclass="language-css">element {
  content: oxy_button(actionID, 'remove.attribute', showIcon, true);
}</codeblock></p>
        </li>
        <li>
          <p id="show_text"><codeph>showText</codeph> - Specifies if the action text should be
            displayed on the button form control. If this property is missing then the button
            displays the icon only if it is available, or the text if the icon is not available. The
            values of this property can be <codeph>true</codeph> or
            <codeph>false</codeph>.<codeblock outputclass="language-css">element {
  content: oxy_button(actionID, 'remove.attribute', showText, true);
}</codeblock></p>
        </li>
        <li>
          <p><codeph>text-align</codeph> - Specifies the alignment of the generated content in its
            reserved space. This property has three possible values:<ul>
              <li><uicontrol>left</uicontrol> (default value)</li>
              <li><uicontrol>right</uicontrol></li>
              <li><uicontrol>center</uicontrol></li>
            </ul><codeblock outputclass="language-css">element {
  content: 
    oxy_label(text, "Label1:", width, 20em, text-align, center)
    oxy_label(text, "Label2:", width, 100px, text-align, right)
}</codeblock></p>
        </li>
        <li><ph id="text-property"><codeph>text</codeph> - This property specifies the built-in form
            control you are using.</ph></li>
        <li><ph conkeyref="reusables-author-mode-customization/tooltips-property"/> The property
          will be ignored if the number of tooltips and the number of values do not match.</li>
        <li><ph conkeyref="reusables-author-mode-customization/tooltip-property"/></li>
        <li><ph id="transparent-property"><codeph>transparent</codeph> - Flattens the aspect of the
            button form control, removing its border and background. The values of this property can
            be <codeph>true</codeph> or <codeph>false</codeph> (default value).</ph></li>
        <li><ph id="type-property"><codeph>type</codeph> - This property specifies the built-in form
            control you are using. This property can have one of the following values:</ph><p>
            <ul id="ul_lsc_vpl_rq">
              <li><codeph>oxy_textfield</codeph> - A text field form control, with optional content
                completion capabilities, is used to present and edit a single line of text.</li>
              <li><codeph>oxy_combobox</codeph> - A combo-box is used that can be a drop-down menu
                or a combination of a drop-down menu and a single-line text field.</li>
              <li><codeph>oxy_checkbox</codeph> - Single or multiple check boxes are used to present
                and select a value.</li>
              <li><codeph>oxy_popup</codeph> - A pop-up menu, allowing single or multiple
                selections, is used to provide quick access to various actions.</li>
              <li><codeph>oxy_button</codeph> - A button is used that invokes a specific author
                action.</li>
              <li><codeph>oxy_buttonGroup</codeph> - A group of buttons that invoke specific author
                actions.</li>
              <li><codeph>oxy_textArea</codeph> - A text box is used to present and edit multiple
                lines of text.</li>
              <li><codeph>oxy_urlChooser</codeph> - A dialog box with a browse button is used to
                select a location of local or remote resources.</li>
              <li><codeph>oxy_datePicker</codeph> - A form control with a calendar browser button is
                used to select a date in a specified format.</li>
              <li><codeph>oxy_htmlContent</codeph>- A form control box is used that is capable of
                rendering HTML content.</li>
            </ul>
          </p></li>
        <li><ph conkeyref="reusables-author-mode-customization/uncheckedValues-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/values-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/visible-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/width-property"/></li>
        <li><ph conkeyref="reusables-author-mode-customization/hover-property-li"
          /><codeblock outputclass="language-css">p:before {
  content: oxy_button(hoverPseudoclassName, 'showBorder')
}
p:showBorder {
  border: 1px solid red;
}</codeblock></li>
      </ul>
    </p>
  </body>
  <related-links>
    <link href="implementing-custom-form-controls.dita#implementing-custom-form-controls"/>
  </related-links>
</topic>
