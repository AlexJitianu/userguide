<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="contextual-menu-actions">
  <title>Contextual Menu Actions in the Design Mode</title>
  <body>
    <p>The contextual menu of the <uicontrol>Design</uicontrol> mode offers the following edit
      actions:</p>
    <ul>
      <li><image href="../img/schema_actions_show_definition.png"/>
        <uicontrol>Show Definition</uicontrol> (<uicontrol
          conref="oxygen-shortcuts-list.dita#oxygen-shortcuts-list/ctrl_shift_enter"/>) - shows the
        definition for the current selected component. For references, this action is available by
        clicking the arrow displayed in its bottom right corner;</li>
      <li>
        <image href="../img/schema_actions_show_definition.png"/>
        <uicontrol>Open Schema</uicontrol> (<uicontrol
          conref="oxygen-shortcuts-list.dita#oxygen-shortcuts-list/ctrl_shift_enter"/>) - opens the
        selected schema. This action is available for <codeph>xsd:import</codeph>,
          <codeph>xsd:include</codeph> and <codeph>xsd:redefine</codeph> elements. If the file you
        try to open does not exist, a warning message is displayed and you have the possibility to
        create the file;</li>
      <li><uicontrol>Edit Attributes...</uicontrol> (<uicontrol
          product="editorEclipse developerEclipse">Alt - Shift - Enter</uicontrol>) - allows you to
        edit the attributes of the selected component in a dialog that presents the same attributes
        as in the <xref href="xml-schema-diagram-attributes-view.dita">Attributes View</xref> and
        the <xref href="xml-schema-diagram-facets-view.dita">Facets View</xref>. The actions that
        can be performed on attributes in this dialog are the same actions presented in the two
        views;</li>
      <li><uicontrol>Append child</uicontrol> - offers a list of valid components to append
        depending on the context. For example to a complex type you can append a compositor, a
        group, attributes or identity constraints (<codeph>unique</codeph>, <codeph>key</codeph>,
          <codeph>keyref</codeph>). You can set a name for a named component after it was added in
        the diagram;</li>
      <li><uicontrol>Insert before</uicontrol> - inserts before the selected component in the
        schema. The list of components that can be inserted depends on the context. For example,
        before an <codeph>xsd:import</codeph> you can insert an <codeph>xsd:import</codeph>,
          <codeph>xsd:include</codeph> or <codeph>xsd:redefine</codeph>. You can set a name for a
        named component after it was added in the diagram;</li>
      <li><uicontrol>Insert after</uicontrol> - inserts a component after the selected component on
        the schema. The list of components that can be inserted depends on the context. You can set
        a name for a named component after it was added in the diagram;</li>
      <li><uicontrol>New global</uicontrol> - inserts a global component in the schema diagram. This
        action does not depend on the current context. If you choose to insert an import you have to
        specify the URL of the imported file, the target namespace and the import ID. The same
        information, excluding the target namespace, is requested for an
          <codeph>xsd:include</codeph> or <codeph>xsd:redefine</codeph> element. See the
          <uicontrol>Edit Import</uicontrol> dialog for more details;<note>If the imported file has
          declared a target namespace, the field <uicontrol>Namespace</uicontrol> is completed
          automatically.</note></li>
      <li><uicontrol>Edit Schema Namespaces...</uicontrol> - when performed on the schema root, it
        allows you to edit the schema target namespace and namespace mappings. You can also invoke
        the action by double-clicking the target namespace property from
          <uicontrol>Attributes</uicontrol> view for the schema or by double-clicking the schema
        component;</li>
      <li id="xml-schema-diagram-edit-annotations"><uicontrol>Edit Annotations...</uicontrol> -
        allows you to edit the annotation for the selected schema component in the <uicontrol>Edit
          Annotations</uicontrol> dialog. You can perform the following operations in the dialog:<ul>
          <li><b>Edit all <codeph>appinfo/documentation</codeph> items for a specific annotation</b>
            - all <codeph>appinfo/documentation</codeph> items for a specific annotation are
            presented in a table and can be easily edited. Information about an annotation item
            includes: type (documentation/appinfo), content, source (optional, specify the source of
            the <codeph>documentation/appinfo</codeph> element) and <codeph>xml:lang</codeph>. The
            content of a <codeph>documentation/appinfo</codeph> item can be edited in the
              <uicontrol>Content</uicontrol> area below the table;</li>
          <li>
            <b>Insert/Insert before/Remove documentation/appinfo.</b>
            <image href="../img/schema_diagram_add.png"/> - allows you to insert a new annotation
            item (<codeph>documentation/appinfo</codeph>). You can add a new item before the item
            selected in table by pressing the <image href="../img/schema_diagram_insert_before.png"
            /> button. Also you can delete the selected item using the <image
              href="../img/schema_diagram_remove.png"/> button;</li>
          <li><b>Move items up/down</b> - to do this use the <image
              href="../img/bt_yellow_up_arrow.png"/> and <image
              href="../img/bt_yellow_down_arrow.png"/> buttons;</li>
          <li><b>Insert/Insert before/Remove annotation</b> - available for components that allow
            multiple annotations like schemas or redefines;</li>
          <li><b>Specify an ID for the component annotation</b>. the ID is optional.</li>
        </ul><p>Annotations are rendered by default under the graphical representation of the
          component. When you have a reference to a component with annotations, these annotations
          are presented in the diagram also below the reference component. The <uicontrol>Edit
            Annotations</uicontrol> action invoked from the contextual menu edit the annotations for
          the reference. If the reference component does not have annotations, you can edit the
          annotations of the referred component by double-clicking the annotations area. Otherwise
          you can edit the referred component annotations only if you go to the definition of the
            component.<note>For imported/included components which do not belong to the currently
            edited schema, the <uicontrol>Edit Annotations</uicontrol> dialog presents the
            annotation as read-only. To edit its annotation, open the schema where the component is
            defined.</note></p></li>
      <li>
        <p><uicontrol>Extract Global Element</uicontrol> - action available for local elements. A
          local element is made global and is replaced with a reference to the global element. The
          local element properties that are also valid for the global element declaration are
          kept;</p>
        <fig>
          <title>Extracting a Global Element </title>
          <image href="../img/schema_diagram_before_extract_group.png"/>
        </fig>
        <p>If you execute <uicontrol>Extract Global Element</uicontrol> on element
            <codeph>name</codeph>, the result is:<fig>
            <image href="../img/schema_diagram_after_extract_element.png"/>
          </fig>
        </p>
      </li>
      <li><uicontrol>Extract Global Attribute</uicontrol> - action available for local attributes. A
        local attribute is made global and replaced with a reference to the global attribute. The
        properties of local attribute that are also valid in the global attribute declaration are kept;<fig>
          <title>Extracting a Global Attribute</title>
          <image href="../img/schema_diagram_before_extract_attribute.png"/>
        </fig><p>If you execute <uicontrol>Extract Global Attribute</uicontrol> on attribute
            <codeph>note</codeph> the result is:<fig>
            <image href="../img/schema_diagram_after_extract_attribute.png"/>
          </fig></p></li>
      <li><uicontrol>Extract Global Group</uicontrol> - action available for compositors (sequence,
        choice, all). This action extracts a global group and makes a reference to it. The action is
        enabled only if the parent of the compositor is not a group;<fig>
          <title>Extracting a Global Group</title>
          <image href="../img/schema_diagram_before_extract_group.png"/>
          <p>If you execute <uicontrol>Extract Global Group</uicontrol> on the sequence element, the
              <uicontrol>Extract Global Component</uicontrol> dialog is shown and you can choose a
            name for the group. If you type <codeph>personGroup</codeph>, the result is:<image
              href="../img/schema_diagram_after_extract_group.png"/>
          </p>
        </fig></li>
      <li><uicontrol>Extract Global Type</uicontrol> - action used to extract an anonymous simple
        type or an anonymous complex type as global. For anonymous complex types, the action is
        available on the parent element;<fig>
          <title>Extracting a Global Simple Type</title>
          <image href="../img/schema_diagram_before_extract_type.png"/>
        </fig>
        <p>If you use the action on the <codeph>union</codeph> component and choose
            <codeph>numericST</codeph> for the new global simple type name, the result is:<fig>
            <image href="../img/schema_diagram_after_extract_type.png"/>
          </fig></p><fig>
          <title>Extracting a Global Complex Type</title>
          <image href="../img/schema_diagram_before_extract_ct.png"/>
        </fig>
        <p>If you execute the action on element <codeph>person</codeph> and choose
            <codeph>person_type</codeph> for the new complex type name, the result is: <fig>
            <image href="../img/schema_diagram_after_extract_ct.png"/>
          </fig>
        </p>
      </li>
      <li><uicontrol>Rename Component</uicontrol> - rename the selected component;</li>
      <li><uicontrol><image href="../img/sa_cut_button.png"/>Cut <shortcut>(Ctrl (Meta on Mac OS) -
            X)</shortcut></uicontrol> - cut the selected component(s);</li>
      <li><uicontrol><image href="../img/sa_copy_button.png"/>Copy <shortcut>(Ctrl (Meta on Mac OS)
            - C)</shortcut></uicontrol> - copy the selected component(s);</li>
      <li><uicontrol><image href="../img/sa_paste_button.png"/>Paste <shortcut>(Ctrl (Meta on Mac
            OS) - V)</shortcut></uicontrol> -paste the component(s) from the clipboard as children
        of the selected component;</li>
      <li><uicontrol>Paste as Reference</uicontrol> - create references to the copied component(s).
        If not possible a warning message is displayed;</li>
      <li><uicontrol>Remove <shortcut>(Delete)</shortcut></uicontrol> - remove the selected
        component(s);</li>
      <li><uicontrol>Override component</uicontrol> - copies the overridden component in the current
        XML Schema. This option is available for <term>xs:override</term> components;</li>
      <li><uicontrol>Redefine component</uicontrol> - the referred component is added in the current
        XML Schema. This option is available for <term>xs:redefine</term> components;</li>
      <li><uicontrol>Optional</uicontrol> - can be performed on element/attribute/group references,
        local attributes, elements, compositors, and element wildcards. The
          <codeph>minOccurs</codeph> property is set to 0 and the <codeph>use</codeph> property for
        attributes is set to <codeph>optional</codeph>;</li>
      <li><uicontrol>Unbounded</uicontrol> - can be performed on element/attribute/group references,
        local attributes, elements, compositors, and element wildcards. The
          <codeph>maxOccurs</codeph> property is set to <codeph>unbounded</codeph> and the
          <codeph>use</codeph> property for attributes is set to <codeph>required</codeph>;</li>
      <li><uicontrol>Search</uicontrol> - can be performed on local elements or attributes. This
        action makes a reference to a global element or attribute;</li>
      <li><uicontrol>
          <image href="../img/SearchReferences16.png"/> Search References</uicontrol> - searches all
        references of the item found at current cursor position in the defined scope if any;</li>
      <li><uicontrol>Search References in...</uicontrol> - searches all references of the item found
        at current cursor position in the specified scope;</li>
      <li><uicontrol>Search Occurrences in File</uicontrol> - searches all occurrences of the item
        found at current cursor position in the current file;</li>
      <li><uicontrol>
          <image href="../img/bt_component_dependencies.png"/> Component Dependencies</uicontrol> -
        allows you to see the dependencies for the current selected component;</li>
      <li><uicontrol>Resource Hierarchy</uicontrol> - allows you to see the hierarchy for the
        current selected resource;</li>
      <li><uicontrol>Flatten Schema</uicontrol> - recursively adds the components of included Schema
        files to the main one. It also flattens every imported XML Schema from the hierarchy;</li>
      <li><uicontrol>Resource Dependencies</uicontrol> - allows you to see the dependencies for the
        current selected resource;</li>
      <li><uicontrol><image href="../img/ExpandAll16.png"/> Expand all</uicontrol> - expands
        recursively all sub-components of the selected component;</li>
      <li><uicontrol><image href="../img/sa_collapse_all.png"/> Collapse all</uicontrol> - collapses
        recursively all sub-components of the selected component;</li>
      <li><uicontrol>Save as Image...</uicontrol> - save the diagram as image, in JPEG, BMP, SVG or
        PNG format;</li>
      <li><uicontrol><image href="../img/XMLGenerator16.png"/> Generate Sample XML Files</uicontrol>
        - generate XML files using the current opened schema. The selected component is the XML
        document root. See more in the <xref href="xml-schema-instance-generator.dita">Generate
          Sample XML Files</xref> section;</li>
      <li><uicontrol><image href="../img/bt_diff_options.png"/> Options...</uicontrol> - show the
          <xref href="preferences-editor-schema.dita">Schema preferences panel</xref>.</li>
    </ul>
  </body>
</topic>
