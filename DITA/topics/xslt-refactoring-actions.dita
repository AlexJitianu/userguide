<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="xslt-refactoring-actions">
  <title>XSLT Refactoring Actions</title>
  <prolog>
    <metadata>
      <keywords><indexterm>Editing XSLT Stylesheets<indexterm>refactoring
        actions</indexterm></indexterm></keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="product"/> offers a set of actions that allow changing the structure of an XSLT
      stylesheet without changing the results of running it in an XSLT transformation. Depending on
      the selected text, the next refactoring actions are available:</p>
    <ul>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>
            <image href="../img/bt_xslt_create_template.png"/>
          </uicontrol>
          <uicontrol>Extract template...</uicontrol>
        </menucascade> - <ph id="extract_template_short_desc">Extracts the selected XSLT
          instructions sequence into a new template.</ph> Opens a dialog that allows you to specify
        the name of the new template to be created. The possible changes to perform on the document
        can be previewed before altering the document. After pressing OK, the template is created
        and the selection is replaced with a <codeph>&lt;xsl:call-template&gt;</codeph> instruction
        referring the newly created template.<note>This action is available only when the selection
          contains well-formed elements.</note><note>The newly created template is indented and its
          name is highlighted in the <codeph>&lt;xsl:call-template></codeph>
          element.</note><note>This refactoring action is also proposed by the <xref
            href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist support</xref>.</note></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>
            <image href="../img/bt_xslt_create_stylesheet.png"/>
          </uicontrol>
          <uicontrol>Move to another stylesheet...</uicontrol>
        </menucascade> - <ph id="move_to_another_stylesheet_short_desc">Allows you to move one or
          more XSLT global components (templates, functions or parameters) to another
          stylesheet.</ph> Active only when these components are selected. Follow these steps:<ul
          id="ul_u1t_d3b_c4">
          <li>execute the <uicontrol>Move to another stylesheet</uicontrol> action. You will be
            prompted to select the destination stylesheet, which can be: a new stylesheet or an
            already existing one.</li>
          <li>press the <uicontrol>Choose</uicontrol> button to navigate to the destination
            stylesheet file. <ph keyref="product"/> will automatically check if the destination
            stylesheet is already contained by the hierarchy of the current stylesheet. If it is not
            contained, choose if the destination stylesheet will be referred (imported or included)
            or not from the current stylesheet. The following options are available:<ul
              id="ul_byx_fhb_c4">
              <li><uicontrol>Include</uicontrol> - the current stylesheet will use an
                  <codeph>xsl:include</codeph> instruction to refer the destination stylesheet;</li>
              <li><uicontrol>Import</uicontrol> - the current stylesheet will use an
                  <codeph>xsl:import</codeph> instruction to refer the destination stylesheet;</li>
              <li><uicontrol>None</uicontrol> - there will be created no relation between the
                current and destination stylesheets.</li>
            </ul></li>
          <li>press the <uicontrol>Move</uicontrol> button to move the components to the destination
            stylesheet. After the action's execution, the moved components are highlighted in the
            destination stylesheet.</li>
        </ul><note>This refactoring action is also proposed by the <xref
            href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist support</xref>.</note></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>Convert attributes to xsl:attributes...</uicontrol>
        </menucascade> - Converts the attributes from the selected element and represents each of
        them with an <codeph>&lt;xsl:attribute&gt;</codeph> instruction. For example from the
        following
          element:<codeblock outputclass="language-xml">&lt;person id="Big{test}Boss"/&gt;</codeblock><p>you
          obtain:</p><codeblock outputclass="language-xml">&lt;person&gt;
    &lt;xsl:attribute name="id"&gt;
        &lt;xsl:text&gt;Big&lt;/xsl:text&gt;
        &lt;xsl:value-of select="test"/&gt;
        &lt;xsl:text&gt;Boss&lt;/xsl:text&gt;
    &lt;/xsl:attribute&gt;
&lt;/person&gt;</codeblock></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>Extract local variable</uicontrol>
        </menucascade> - <ph id="extract_local_var_sh_desc">Allows you to create a new local
          variable by extracting the selected XPath expression.</ph> After creating the new local
        variable before the current element, <ph keyref="product"/> allows you to edit in-place the
        variable's name.<note>The action is active on a selection made inside an attribute that
          contains an XPath expression.</note><note>This refactoring action is also proposed by the
            <xref href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist
          support</xref>.</note></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>Extract global variable</uicontrol>
        </menucascade> - <ph id="extract_global_var_sh_desc">Allows you to create a new global
          variable by extracting the selected XPath expression.</ph> After creating the new global
        variable, <ph keyref="product"/> allows you to edit in-place the variable's name.<note>The
          action is active on a selection made inside an attribute that contains an XPath
          expression.</note><note><ph keyref="product"/> checks if the selected expression depends
          on local variables or parameters that are not available in the global context where the
          new variable is created.</note><note>This refactoring action is also proposed by the <xref
            href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist support</xref>.</note></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>Extract template parameter</uicontrol>
        </menucascade> - <ph id="extract_templ_param_sh_desc">Allows you to create a new template
          parameter by extracting the selected XPath expression.</ph> After creating the new
        parameter, <ph keyref="product"/> allows you to edit in-place its name.<note>The action is
          active on a selection made inside an attribute that contains an XPath
          expression.</note><note>This refactoring action is also proposed by the <xref
            href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist support</xref>.</note></li>
      <li><menucascade>
          <uicontrol product="editor developer">Document</uicontrol>
          <uicontrol product="editorEclipse developerEclipse">XSL</uicontrol>
          <uicontrol product="editor developer">Refactoring</uicontrol>
          <uicontrol>Extract global parameter</uicontrol>
        </menucascade> - <ph id="extract_global_param_sh_desc">Allows you to create a new global
          parameter by extracting the selected XPath expression.</ph> After creating the new
        parameter, <ph keyref="product"/> allows you to edit in-place its name.<note>The action is
          active on a selection made inside an attribute that contains an XPath
            expression.</note><note><ph keyref="product"/> checks if the selected expression depends
          on local variables or parameters that are not available in the global context where the
          new parameter is created.</note><note>This refactoring action is also proposed by the
            <xref href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist
          support</xref>.</note></li>
      <li><menucascade>
          <uicontrol>contextual menu of current editor</uicontrol>
          <uicontrol>Refactoring</uicontrol>
          <uicontrol><image href="../img/RenameXSLResource20.png"/> Rename Component
            in...</uicontrol>
        </menucascade> - Renames the selected component. Specify the new name for the component and
        the files affected by the modification as described for <xref
          href="xml-schema-search-references.dita#xml-schema-search-references/rename-component">XML
          Schema</xref>.<note>This refactoring action is also proposed by the <xref
            href="xslt-quick-assist.dita#xslt-quick-assist">Quick Assist support</xref>.</note></li>
    </ul>
    <p>To watch our video demonstration about XSLT refactoring, go to <xref
        href="http://oxygenxml.com/demo/XSL_Refactoring.html" format="html" scope="external"
        >http://oxygenxml.com/demo/XSL_Refactoring.html</xref>.</p>
  </body>
</topic>
