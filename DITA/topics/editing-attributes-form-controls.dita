<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dg-oxygen-attributes-in-place-editing">
  <title>Editing attributes in-place using form controls</title>
  <body>
    <p>To edit attributes in the <uicontrol>Author</uicontrol> mode, use the <xref
        href="http://www.oxygenxml.com/doc/ug-editor/topics/author-attributes-view.html"
        format="html" scope="external" product="editor"><uicontrol>Attributes View</uicontrol>
      </xref><xref
        href="http://www.oxygenxml.com/doc/ug-editorEclipse/topics/author-attributes-view.html"
        format="html" scope="external" product="editorEclipse"><uicontrol>Attributes
          View</uicontrol></xref><xref
        href="http://www.oxygenxml.com/doc/ug-author/topics/author-attributes-view.html"
        format="html" scope="external" product="author"><uicontrol>Attributes
        View</uicontrol></xref><xref
        href="http://www.oxygenxml.com/doc/ug-authorEclipse/topics/author-attributes-view.html"
        format="html" scope="external" product="authorEclipse"><uicontrol>Attributes
          View</uicontrol></xref><ph product="author authorEclipse editor editorEclipse"> or
        the</ph> in-place attributes editing dialog.</p>
    <p>The <xref href="../concepts/dg-editor-function.dita"><codeph>oxy_editor</codeph></xref> CSS
      extension function allows you to edit attribute and element text values directly in the Author
      mode using form-based controls. Various implementations are available out of the box: <xref
        href="../concepts/combo-box-editor.dita">combo boxes</xref>, <xref
        href="../concepts/check-box-editor.dita">checkboxes</xref>, <xref
        href="../concepts/text-field-editor.dita">text fields</xref>, <xref
        href="../concepts/pop-up-editor.dita">pop-ups</xref>, <xref
        href="../concepts/button-editor.dita">buttons</xref> which invoke custom Author actions or
        <xref href="../concepts/url-chooser-editor.dita">URL choosers</xref>. You can also implement
      custom editors for your specific needs. </p>
    <p>As a working example, the bundled samples project contains a file called
        <filepath>personal.xml</filepath> which allows editing attributes in-place using some of
      these default implementations.</p>
  </body>
</topic>
